{"version":3,"sources":["store/actions/Role.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/Wizard/checkbox.js","components/Wizard/Alert.js","components/Wizard/HorizontalLinearStepper.js","store/actions/newOrder.js","components/dashboard/Basemap.jsx","firebase/index.js","components/dashboard/Dashboard.js","components/index/indexPage.js","components/auth/SignIn.js","components/auth/InputEmail.js","components/auth/ResetPassword.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/layout/Footer.js","components/Profile/profile.js","components/ContactForm/ContactForm.js","components/Help/MaterialTable.js","components/Help/HelpPage.js","components/Admin/Notifications.js","components/Admin/AdminPanel.js","components/Admin/EditUser.js","components/MyOrders/EditOrder.js","components/DrawerLeft/DrawerHead.js","components/DrawerLeft/PersistentDrawerLeft.js","components/MyOrders/MyOrders.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/orderReducer.js","store/reducers/index.js","index.js","components/layout/logo.png"],"names":["Role","connect","state","ownProps","auth","firebase","profile","dispatch","signOut","getState","getFirebase","then","type","props","role","console","log","Fragment","to","onClick","className","initials","SignedOutLinks","Navbar","this","links","uid","alt","id","src","require","React","Component","Checkbox","label","isSelected","onCheckboxChange","newColor","style","name","checked","onChange","useStyles","makeStyles","theme","root","width","marginTop","spacing","SimpleAlerts","errorStatus","classes","Alert","variant","severity","button","marginRight","instructions","marginBottom","saveOrderData","selectedBoxes","firestore","getFirestore","authorId","collection","add","authorFirstName","firstName","authorLastName","lastName","userId","createdAt","Date","order","status","value","catch","err","useState","setErrorStatus","activeStep","setActiveStep","Set","skipped","setSkipped","steps","OPTIONS","checkboxes","reduce","options","option","setState","newColorConfirm","color","createCheckbox","handleCheckboxChange","key","createCheckbox1","changeEvent","target","prevState","handleFormSubmit","formSubmitEvent","preventDefault","Object","keys","filter","checkbox","isStepOptional","step","isStepSkipped","has","handleNext","length","msg","newSkipped","values","delete","prevActiveStep","handleReset1","Stepper","map","index","stepProps","labelProps","optional","Typography","component","completed","Step","StepLabel","Button","onSubmit","getStepContent","display","disabled","e","ee","document","createEvent","initEvent","getElementsByClassName","dispatchEvent","mapEvent","Basemap","bm","currentTarget","basemap","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","storage","storageRef","ref","database","L","Icon","Default","imagePath","polygon","Dashboard","mapRef","createRef","handleClick","current","leafletElement","locate","Polygon","latlng","onCreate","layer","getLatLngs","drawedCord","toGeoJSON","geometry","coordinates","result","saveData","data","tokml","kml","kmlNameDescription","description","convertedData","JSON","stringify","FileSaver","blob","Blob","saveAs","date","formattedDate","format","filename","put","onGeojsonPolygons","showPolygons","onGeojsonMarkers","showMarkers","onGeojsonToggleButton","geojsonvisible","click","onBMChange","onButtonClick","coords","cordinatesCenter","downloadURLs","zoom","content","file","File","feature","popupContent","properties","Name","Crops","bindPopup","on","circleMarker","position","Map","height","center","onLocationfound","handleLocationFound","opacity","pointerEvents","GeoJSON","geojson","geoJSONStyle","points","onEachFeature","onEachFeaturePoint","bind","TileLayer","attribution","url","osm","hot","dark","cycle","sentinel","layers","Marker","Popup","select","FeatureGroup","onEdited","_onEditPath","onCreated","onDeleted","_onDeleted","onMounted","_mounted","onEditStart","_onEditStart","onEditStop","_onEditStop","onDeleteStart","_onDeleteStart","onDeleteStop","_onDeleteStop","draw","rectangle","positions","london_postcodes","saveToFile","cordinates","indexPage","compose","SignIn","onChangeInput","onSubmitForm","signIn","email","password","authError","placeholder","float","creds","credentials","signInWithEmailAndPassword","InputEmail","handleChange","ResetPassword","errors","errorClass","validate","push","split","x","indexOf","handleSubmit","sendPasswordResetEmail","window","alert","error","emailAddress","SignUp","city","telephone","signUp","imageurl","dipsatch","newUser","createUserWithEmailAndPassword","resp","doc","user","set","createdDate","CreateProject","title","createrProject","history","class","multiple","project","projects","ordered","href","Profile","ContactForm","message","sendMessage","MaterialTableDemo","columns","field","lookup","34","63","surname","birthYear","birthCity","editable","onRowAdd","newData","Promise","resolve","setTimeout","onRowUpdate","oldData","onRowDelete","splice","HelpPage","Notifications","notifications","item","moment","time","toDate","fromNow","urls","AdminPanel","UserData","get","forEach","child","listAll","res","items","folderRef","getDownloadURL","toString","xhr","XMLHttpRequest","open","responseType","onload","response","send","users","orders","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","background","default","TableRow","Math","random","rel","Table","aria-label","TableHead","TableBody","toDateString","firestoreConnect","limit","orderBy","where","EditUser","getDate","updateRef","match","params","update","docRef","files","image","imageName","handleUpload","snapshot","progress","round","bytesTransferred","totalBytes","exists","htmlFor","EditOrder","selectedOption","for","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","iconColor","PersistentDrawerLeft","useTheme","setOpen","handleDrawerClose","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Drawer","anchor","paper","direction","Divider","List","ListItem","ListItemIcon","ListItemText","primary","MyOrders","App","paddingTop","path","Documentation","Boolean","location","hostname","initState","authReducer","action","projectReducer","orderReducer","reducers","combineReducers","firestoreReducer","firebaseReducer","store","applyMiddleware","ReduxPromise","createStore","createStoreWithMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"0PAAaA,EAGH,OCsDKC,eANS,SAACC,EAAOC,GAC9B,MAAO,CACLC,KAAMF,EAAMG,SAASD,KACrBE,QAASJ,EAAMG,SAASC,YARD,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GC9BV,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAGzBN,OACAI,UACAG,MAAK,WACJJ,EAAS,CAAEK,KAAM,8BDiCVX,EAnDO,SAACY,EAAOP,GAC5B,MAA2B,UAAvBO,EAAMP,QAAQQ,MAChBC,QAAQC,IAAI,YAAaV,EAAQQ,MAE/B,kBAAC,IAAMG,SAAP,KACE,4BACE,kBAAC,IAAD,CAASC,GAAG,aAAZ,aAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,eAAZ,eAEF,4BACE,uBAAGC,QAASN,EAAML,SAAlB,YAEF,4BACE,kBAAC,IAAD,CAASU,GAAG,WAAWE,UAAU,yBAC9BP,EAAMP,QAAQe,aAOrB,kBAAC,IAAMJ,SAAP,KACE,4BACE,kBAAC,IAAD,CAASC,GAAG,aAAZ,aAEF,4BACE,uBAAGC,QAASN,EAAML,SAAlB,YAEF,4BACE,kBAAC,IAAD,CAASU,GAAG,WAAWE,UAAU,yBAC9BP,EAAMP,QAAQe,eE1BZC,EATQ,WACnB,OACI,kBAAC,IAAML,SAAP,KAEI,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,YCDHK,EAAb,uKACY,IAAD,EACmBC,KAAKX,MAAvBP,EADD,EACCA,QACFmB,EAFC,EACUrB,KACEsB,IACjB,kBAAC,EAAD,CAAepB,QAASA,IAExB,kBAAC,EAAD,MAEF,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,cACrB,yBAAKO,IAAI,OAAOC,GAAG,UAAUC,IAAKC,EAAQ,QAE5C,wBAAIF,GAAG,aAAaR,UAAU,8BAC3BK,UAhBf,GAA4BM,IAAMC,WAgCnB/B,eAPS,SAACC,GACvB,MAAO,CACLE,KAAMF,EAAMG,SAASD,KACrBE,QAASJ,EAAMG,SAASC,WAIbL,CAAyBsB,G,+MCpBzBU,EAhBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,iBAAkBC,EAAxC,EAAwCA,SAAxC,OACb,2BACE,2BAAOC,MAAOD,GACZ,2BACEzB,KAAK,WACL2B,KAAML,EACNM,QAASL,EACTM,SAAUL,EACVhB,UAAU,qBAEZ,8BAAOc,M,UCRTQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAKhB,SAASC,EAAT,GAAsC,IAAfC,EAAc,EAAdA,YAC9BC,EAAUT,IAEhB,OACkB,OAAhBQ,GACA,yBAAK9B,UAAW+B,EAAQN,MACtB,kBAACO,EAAA,EAAD,CAAOC,QAAQ,WAAWC,SAAS,WAAnC,2CCHN,IAAMZ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QAETS,OAAQ,CACNC,YAAaZ,EAAMI,QAAQ,IAE7BS,aAAc,CACZV,UAAWH,EAAMI,QAAQ,GACzBU,aAAcd,EAAMI,QAAQ,QA4VhC,IAWe/C,eAXS,SAACC,GACvB,MAAO,CACLE,KAAMF,EAAMG,SAASD,SAGE,SAACG,GAC1B,MAAO,CACLoD,cAAe,SAACC,GAAD,OAAmBrD,EC3XT,SAACqD,GAC5B,OAAO,SAACrD,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IACvDmD,GAAYC,EAD0C,EAAnBA,gBAEnCxD,EAAUG,IAAWJ,SAASC,QAC9ByD,EAAWtD,IAAWJ,SAASD,KAAKsB,IAC1CmC,EACGG,WAAW,UACXC,IAAI,CACHC,gBAAiB5D,EAAQ6D,UACzBC,eAAgB9D,EAAQ+D,SACxBC,OAAQP,EACRQ,UAAW,IAAIC,KACfC,MAAOb,EACPc,OAAQ,CAAC,CAAEC,MAAO,YAAazC,MAAO,gBAEvCvB,MAAK,WACJJ,EAAS,CAAEK,KAAM,cAAegD,qBAEjCgB,OAAM,SAACC,GACNtE,EAAS,CAAEK,KAAM,oBAAqBiE,YDwWClB,CAAcC,QAI9C3D,EA1Vf,SAAiCY,GAC/B,IAAMsC,EAAUT,IADsB,EAEAX,IAAM+C,SAAS,MAFf,mBAE/B5B,EAF+B,KAElB6B,EAFkB,OAGFhD,IAAM+C,SAAS,GAHb,mBAG/BE,EAH+B,KAGnBC,EAHmB,OAIRlD,IAAM+C,SAAS,IAAII,KAJX,mBAI/BC,EAJ+B,KAItBC,EAJsB,KAKhCC,EAbC,CACL,gCACA,uBACA,8BACA,+BAUIC,EAAU,CACd,kDACA,yCACA,gCACA,iCACA,gBACA,gEAZoC,EAcZvD,IAAM+C,SAAS,CACvCS,WAAYD,EAAQE,QAClB,SAACC,EAASC,GAAV,mBAAC,eACID,GADL,kBAEGC,GAAS,MAEZ,MApBkC,mBAc/BxF,EAd+B,KAcxByF,EAdwB,KAyBhCC,EAAkB,CACtBC,MAAO,SAEHC,EAAiB,SAACJ,GAAD,OACrB,kBAAC,EAAD,CACExD,MAAOwD,EACPvD,WAAYjC,EAAMqF,WAAWG,GAC7BtD,iBAAkB2D,EAClBC,IAAKN,EACLrD,SAAUuD,KAGRK,EAAkB,SAACP,GAAD,OACtB,kBAAC,EAAD,CACExD,MAAOwD,EACPvD,WAAYjC,EAAMqF,WAAWG,GAC7BtD,iBAAkB,aAClB4D,IAAKN,KAIHK,EAAuB,SAACG,GAAiB,IACrC3D,EAAS2D,EAAYC,OAArB5D,KAERoD,GAAS,SAACS,GAAD,MAAgB,CACvBb,WAAW,2BACNa,EAAUb,YADL,kBAEPhD,GAAQ6D,EAAUb,WAAWhD,UAa9B8D,EAAmB,SAACC,GACxBA,EAAgBC,iBAChB,IAAM3C,EAAgB4C,OAAOC,KAAKvG,EAAMqF,YAAYmB,QAClD,SAACC,GAAD,OAAczG,EAAMqF,WAAWoB,MAGjC9F,EAAM8C,cAAcC,GAEpB7C,QAAQC,IAAI,sBAoCR4F,EAAiB,SAACC,GACtB,OAAgB,IAATA,GAEHC,EAAgB,SAACD,GACrB,OAAO1B,EAAQ4B,IAAIF,IAEfG,EAAa,WAEjB,IAAMpD,EAAgB4C,OAAOC,KAAKvG,EAAMqF,YAAYmB,QAClD,SAACC,GAAD,OAAczG,EAAMqF,WAAWoB,MAGjC,GADA5F,QAAQC,IAAI,mBAAoB4C,EAAcqD,QAC3B,IAAfjC,GAAoBpB,EAAcqD,OAAS,EAC7ClG,QAAQC,IAAI,0CACZ+D,EAAe,CAAEmC,IAAK,uBAAwBtG,KAAM,gBAC/C,CACL,IAAIuG,EAAahC,EACb2B,EAAc9B,KAChBmC,EAAa,IAAIjC,IAAIiC,EAAWC,WACrBC,OAAOrC,GAEpBC,GAAc,SAACqC,GAAD,OAAoBA,EAAiB,KACnDlC,EAAW+B,KAgBTI,EAAe,WACnB5B,EAAS,CACPJ,WAAYD,EAAQE,QAClB,SAACC,EAASC,GAAV,mBAAC,eACID,GADL,kBAEGC,GAAS,MAEZ,OA8DN,OACE,yBAAKtE,UAAW+B,EAAQN,MACtB,kBAAC2E,EAAA,EAAD,CAASxC,WAAYA,GAClBK,EAAMoC,KAAI,SAACvF,EAAOwF,GACjB,IAAMC,EAAY,GACZC,EAAa,GAWnB,OAVIhB,EAAec,KACjBE,EAAWC,SACT,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAAO1E,QAAQ,WAArC,aAKAyD,EAAcY,KAChBC,EAAUK,WAAY,GAGtB,kBAACC,EAAA,EAAD,eAAMjC,IAAK9D,GAAWyF,GACpB,kBAACO,EAAA,EAAcN,EAAa1F,QAKpC,6BACG8C,IAAeK,EAAM4B,OACpB,6BACE,kBAACa,EAAA,EAAD,CAAYC,UAAU,OAAO3G,UAAW+B,EAAQM,cAAhD,6BAC4B,6BAD5B,kDAIA,6BACA,6BACA,kBAAC0E,EAAA,EAAD,CACEhH,QA3FQ,WAClB8D,EAAc,IA2FJ7D,UAAW+B,EAAQI,OACnBF,QAAQ,aAHV,aAOA,kBAAC8E,EAAA,EAAD,CAEE/G,UAAW+B,EAAQI,OACnBF,QAAQ,YACRwC,MAAM,WAGN,kBAAC,IAAD,CAAMvD,MAAO,CAAEuD,MAAO,SAAW3E,GAAG,aAApC,eAMJ,6BACE,kBAAC4G,EAAA,EAAD,CAAYC,UAAU,OAAO3G,UAAW+B,EAAQM,cA1G1D,SAAwBoD,GACtB,OAAQA,GACN,KAAK,EACH,OACE,6BACE,4DACA,4aAWN,KAAK,EACH,OACE,4BACE,yEACA,oQAMA,8EACA,8EAGN,KAAK,EACH,OAEE,6BACE,kBAAC,EAAD,CAAO3D,YAAaA,IACpB,0BAAMkF,SAAU/B,GA9IKf,EAAQmC,IAAI3B,KAkJvC,KAAK,EACH,OAAO,0BAAMsC,SAAU/B,GAlJGf,EAAQmC,IAAIxB,IAmJxC,QACE,MAAO,gBAgEAoC,CAAerD,IAElB,6BACE,kBAACmD,EAAA,EAAD,CACE7F,MAAK,eACgB,IAAf0C,EAAmB,CAAEsD,QAAS,QAAW,IAE/CC,SAAyB,IAAfvD,EACV7D,QAhJK,WACjB8D,GAAc,SAACqC,GAAD,OAAoBA,EAAiB,MAgJvClG,UAAW+B,EAAQI,QANrB,QAWCqD,EAAe5B,IACd,kBAACmD,EAAA,EAAD,CACE9E,QAAQ,YACRwC,MAAM,UACN1E,QAAS,SAACqH,IA/ET,SAACA,GAChB,IAAIC,EAAKC,SAASC,YAAY,SAC9BF,EAAGG,UAAU,SAAS,GAAM,GACnBF,SAASG,uBAAuB,6BAC9B,GAAGC,cAAcL,GA4EZM,IAEF3H,UAAW+B,EAAQI,QANrB,kBAWF,kBAAC4E,EAAA,EAAD,CACE7F,MAAK,mDACgB,IAAf0C,EAAmB,CAAEsD,QAAS,QAAW,IAC1B,IAAftD,EAAmB,CAAEsD,QAAS,QAAW,IAC1B,IAAftD,EAAmB,CAAEsD,QAAS,QAAW,IAC1B,IAAftD,EAAmB,CAAEsD,QAAS,QAAW,IAE/CC,SAAyB,IAAfvD,EACV7D,QAtKD,WACX,IAAMyC,EAAgB4C,OAAOC,KAAKvG,EAAMqF,YAAYmB,QAClD,SAACC,GAAD,OAAczG,EAAMqF,WAAWoB,MAEjC9F,EAAM8C,cAAcC,GACpB7C,QAAQC,IAAI,yCACZuG,IACAP,KAgKY5F,UAAW+B,EAAQI,OACnBF,QAAQ,YACRwC,MAAM,WAXR,qBAgBA,kBAACsC,EAAA,EAAD,CACE9E,QAAQ,YACRwC,MAAM,UACN1E,QAAS6F,EACT5F,UAAW+B,EAAQI,OACnBjB,MAAK,eACgB,IAAf0C,EAAmB,CAAEsD,QAAS,QAAW,KAG9CtD,IAAeK,EAAM4B,OAAS,EAI3B,QACA,e,kBElVL+B,E,4MAvBbvG,SAAW,SAAC+F,GACV,IAAIS,EAAKT,EAAEU,cAAcvE,MAErB,EAAK9D,MAAM4B,UACb,EAAK5B,MAAM4B,SAASwG,I,uDAKtB,OACE,yBAAK7H,UAAU,sBACb,4BAAQuD,MAAOnD,KAAKX,MAAMsI,QAAS1G,SAAUjB,KAAKiB,UAChD,4BAAQkC,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,aACA,4BAAQA,MAAM,YAAd,6B,GAjBY5C,IAAMC,W,yECiB1B3B,IAAS+I,cAZY,CACrBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,0CACfC,kBAAmB,aACnBC,MAAO,0CACPC,cAAe,iBAKfvJ,IAASwD,YAAYgG,SAAS,IAE9B,IAAMC,EAAUzJ,IAASyJ,UACnBC,GAAWD,EAAQE,MAC1B3J,IAAS4J,W,cCIVC,IAAEC,KAAKC,QAAQC,UAAY,+CAO3B,IAAMC,GAAU,CACd,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,YAGDC,GAAb,kDACE,WAAY1J,GAAQ,IAAD,8BACjB,cAAMA,IAaR2J,OAASC,sBAdU,EAgBnBC,YAAc,WACZ,IAAMjD,EAAM,EAAK+C,OAAOG,QACb,MAAPlD,GACFA,EAAImD,eAAeC,SAErB9J,QAAQC,IAAI,kBAAmB8J,IAAQC,SArBtB,EAwBnBC,SAAW,SAACxC,GACV,IAAIyC,EAAQzC,EAAEyC,MACdlK,QAAQC,IAAI,qBAAsBiK,EAAMC,cACxCnK,QAAQC,IAAI,qBAAsBwH,GAElC,IALgB,EAKZ2C,EAAaF,EAAMG,YAAYC,SAASC,YAL5B,cAMKH,GANL,IAMhB,gCAAWI,EAAX,QAAiC,EAAK1K,MAAM2K,SAASD,IANrC,8BAQhBxK,QAAQC,IAAI,SAAUmK,GAEtB,IAAIM,EAAOR,EAAMG,YACbM,EAAQ5J,EAAQ,KAChB6J,EAAMD,EAAMD,GAChB1K,QAAQC,IAAI,aAAc2K,GAC1B,IAAIC,EAAqBF,EAAMD,EAAM,CACnClJ,KAAM,OACNsJ,YAAa,gBAEf9K,QAAQC,IAAI,yBAA0B4K,GACtC,IAAIE,EAAgBC,KAAKC,UAAUP,GACnC1K,QAAQC,IAAI8K,GACZ,IAAIG,EAAYnK,EAAQ,KACpBoK,EAAO,IAAIC,KAAK,CAACP,GAAqB,CACxChL,KAAM,6BAERqL,EAAUG,OAAOF,EAAM,kBAEvB,IAAIG,EAAO,IAAI7H,KAEX8H,EAAgBC,kBAAOF,EAAM,oBAEjCtL,QAAQC,IAAIsL,GACZ,IAAME,EAAWF,EAAgB,IAAM,EAAKzL,MAAMP,QAAQ6D,UAC1DpD,QAAQC,IAAIwL,GACZ1C,EAAQE,IAAR,gBAAqBwC,EAArB,SAAqCC,IAAIP,IA1DxB,EAgFnBQ,kBAAoB,SAAClE,GACnB,EAAK7C,SAAS,CACZgH,aAAcnE,EAAEU,cAAc1G,WAlFf,EAsFnBoK,iBAAmB,SAACpE,GAClB,EAAK7C,SAAS,CACZkH,YAAarE,EAAEU,cAAc1G,WAxFd,EA4FnBsK,sBAAwB,SAACtE,GACvB,EAAK7C,SAAS,CACZoH,eAAgBvE,EAAEU,cAAc8D,SA9FjB,EAmGnBC,WAAa,SAAChE,GAEZ,EAAKtD,SAAS,CACZwD,QAASF,KAtGM,EAkInBiE,cAAgB,SAACC,GAIf,EAAKxH,SAAS,CACZyH,iBAAkBD,KArIpB,EAAKjN,MAAQ,CACXiJ,QAAS,MACTkE,aAAc,GACdD,iBAAkB,CAAC,UAAW,WAC9BE,KAAM,GACNT,aAAa,EACbF,cAAc,EACdI,gBAAgB,GATD,EADrB,yDA+DI,IAAId,EAAYnK,EAAQ,KACpBoK,EAAO,IAAIC,KAAK,CAAC,6BAA8B,CACjDvL,KAAM,6BAERqL,EAAUG,OAAOF,EAAM,kCAnE3B,kCAuEcqB,EAASf,GACnB,IAAIgB,EAAOhB,EAAW,WACtBJ,iBACE,IAAIqB,KAAK,CAAC1B,KAAKC,UAAUuB,IAAWC,EAAM,CACxC5M,KAAM,6BAER4M,KA7EN,sFA4GqBE,EAASzC,GAC1BlK,QAAQC,IAAI,YAAa0M,GACzB3M,QAAQC,IAAI,UAAWiK,GACvB,IAAI0C,EACFD,EAAQE,WAAWC,KAAO,KAAOH,EAAQE,WAAWE,MACtD/M,QAAQC,IAAI0M,EAAQE,WAAWtC,aAC/B9J,KAAKmE,SAAS,CACZyH,iBAAkBM,EAAQE,WAAWtC,cAEvCL,EAAM8C,UAAUJ,GAChB1C,EAAM+C,GAAG,CACPhB,MAAO,SAAUxE,GACfzH,QAAQC,IAAI,MAAOwH,GACnBzH,QAAQC,IAAI,cAzHpB,mCA8He0M,EAAS3C,GACpB,OAAOb,IAAE+D,aAAalD,EAAQ,QA/HlC,+BA4IY,IAAD,OACDmD,EAAW1M,KAAKtB,MAAMkN,iBACpB9M,EAAYkB,KAAKX,MAAjBP,QACR,GAAqB,SAAjBA,EAAQQ,MAAoC,UAAjBR,EAAQQ,KAAkB,CACvDC,QAAQC,IAAI,YAAaV,EAAQQ,MASjC,OACE,yBAAKc,GAAG,MAAMR,UAAU,uBACtB,6BACA,kBAAC,EAAD,MACA,6BACA,6BACA,kBAAC+M,EAAA,EAAD,CACE7L,MAAO,CAAE8L,OAAQ,QACjBC,OAAQH,EACRZ,KAAM,GACNnM,QAASK,KAAKkJ,YACdM,SAAUxJ,KAAKwJ,SACfsD,gBAAiB9M,KAAK+M,qBAEtB,kBAAC,IAAD,MAEA,yBAAKnN,UAAU,kBACb,iDACA,2BACEkB,MAAO,CAAEkM,QAAS,EAAGC,cAAe,QACpC7N,KAAK,WACL2B,KAAK,cACLX,GAAG,cACH+C,MAAOnD,KAAKtB,MAAMyM,aAClBlK,SAAUjB,KAAKkL,qBAGlBlL,KAAKtB,MAAMyM,cACV,kBAAC+B,EAAA,EAAD,CACEjD,KAAMkD,EACNrM,MAAOd,KAAKoN,aACZjK,MAAOnD,KAAKtB,MAAMyM,eAItB,yBAAKvL,UAAU,mBACb,gDACA,2BACEkB,MAAO,CAAEkM,QAAS,EAAGC,cAAe,QACpC7N,KAAK,WACL2B,KAAK,cACLX,GAAG,cACH+C,MAAOnD,KAAKtB,MAAM2M,YAClBpK,SAAUjB,KAAKoL,oBAGlBpL,KAAKtB,MAAM2M,aACV,kBAAC6B,EAAA,EAAD,CACEjD,KAAMoD,EACNvM,MAAOd,KAAKoN,aACZjK,MAAOnD,KAAKtB,MAAM2M,YAClBiC,cAAetN,KAAKuN,mBAAmBC,KAAKxN,QAIhD,kBAACyN,EAAA,EAAD,CACEC,YAAY,yEACZC,IAjEa,CACnBC,IAAK,qDACLC,IAAK,wDACLC,KAAM,gEACNC,MAAO,gEACPC,SACE,kOA2DsBhO,KAAKtB,MAAMiJ,SAC7BsG,OAAO,SAGT,kBAACC,EAAA,EAAD,CAAQxB,SAAUA,GAChB,kBAACyB,EAAA,EAAD,kCAEDnO,KAAKtB,MAAM6M,gBACV,kBAAC2B,EAAA,EAAD,CACEjD,KAAMoD,EACNC,cAAetN,KAAKuN,mBAAmBC,KAAKxN,QAIhD,kBAAC,EAAD,CACEc,MAAO,CAAEsN,OAAQ,OACjBzG,QAAS3H,KAAKtB,MAAMiJ,QACpB1G,SAAUjB,KAAKyL,aAEjB,kBAAC4C,EAAA,EAAD,KACE,kBAAC,IAAD,CACE3B,SAAS,UACT4B,SAAUtO,KAAKuO,YACfC,UAAWxO,KAAKwJ,SAChBiF,UAAWzO,KAAK0O,WAChBC,UAAW3O,KAAK4O,SAChBC,YAAa7O,KAAK8O,aAClBC,WAAY/O,KAAKgP,YACjBC,cAAejP,KAAKkP,eACpBC,aAAcnP,KAAKoP,cACnBC,KAAM,CACJC,WAAW,MAIjB,kBAAChG,EAAA,EAAD,CAASjF,MAAM,SAASkL,UAAWzG,KACnC,kBAACoE,EAAA,EAAD,CACEjD,KAAMuF,EACN1O,MAAOd,KAAKoN,aACZE,cAAetN,KAAKsN,iBAGxB,6BACA,6BACA,4BACE1N,UAAU,+BACVD,QAASK,KAAKsL,uBAFhB,uNAMA,6BACA,4BACE1L,UAAU,+BACVD,QAAS,kBAAM,EAAK+L,cAAc,CAAC,WAAY,gBAFjD,wLAMA,6BACA,4BACE9L,UAAU,+BACVD,QAASK,KAAKyP,YAFhB,iBAMA,6BACA,8BAIJ,OACE,wBAAI7P,UAAU,6BAAd,iFAxRR,GAA+BW,IAAMC,WA4StB/B,gBAZS,SAACC,GACvB,MAAO,CACLE,KAAMF,EAAMG,SAASD,KACrBE,QAASJ,EAAMG,SAASC,YAGD,SAACC,GAC1B,MAAO,CACLiL,SAAU,SAAC0F,GAAD,OAAgB3Q,ETjQN,SAAC2Q,GACvB,OAAO,SAAC3Q,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IACvDmD,GAAYC,EAD0C,EAAnBA,gBAEnCxD,EAAUG,IAAWJ,SAASC,QAC9ByD,EAAWtD,IAAWJ,SAASD,KAAKsB,IAC1CmC,EACGG,WAAW,cACXC,IAFH,aAGIC,gBAAiB5D,EAAQ6D,UACzBC,eAAgB9D,EAAQ+D,SACxBN,SAAUA,EACVQ,UAAW,IAAIC,MACZ0M,IAEJvQ,MAAK,WACJJ,EAAS,CAAEK,KAAM,kBAAmBsQ,kBAErCtM,OAAM,SAACC,GACNtE,EAAS,CAAEK,KAAM,wBAAyBiE,YS+OX2G,CAAS0F,QAIjCjR,CAA6CsK,I,SClV/C4G,GAAb,uKAEI,OACI,yBAAK/P,UAAU,qBAAqBQ,GAAG,gBACvC,yBAAKR,UAAU,aAEb,wBAAIA,UAAU,6BAAd,gCACA,yBAAKA,UAAU,cACb,uBAAGA,UAAU,wBAAb,gCACA,uBAAGA,UAAU,wBAAb,gDACA,uBAAGA,UAAU,wBAAb,uEAMF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMF,GAAG,YAAW,wBAAIE,UAAU,uCAAd,gBAGxB,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMF,GAAG,cAAa,wBAAIE,UAAU,uCAAd,iBAG1B,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMF,GAAG,aAAY,wBAAIE,UAAU,uCAAd,4BA5BzC,GAA+BW,IAAMC,WAuCtBoP,kBAAUD,ICrCnBE,G,kDACF,WAAYxQ,GAAQ,IAAD,8BACf,cAAMA,IASVyQ,cAAgB,SAAC9I,GACb,EAAK7C,SAAL,eACK6C,EAAErC,OAAOvE,GAAK4G,EAAErC,OAAOxB,SAZb,EAgBnB4M,aAAe,SAAC/I,GACZA,EAAEjC,iBACF,EAAK1F,MAAM2Q,OAAO,EAAKtR,QAfvB,EAAKA,MAAQ,CACTuR,MAAM,GACNC,SAAS,IALE,E,qDAqBT,IAAD,EACqBlQ,KAAKX,MAAxB8Q,EADF,EACEA,UACP,OAFK,EACavR,KACVsB,IAAY,kBAAC,IAAD,CAAUR,GAAG,eAE7B,kBAAC,IAAMD,SAAP,KACA,yBAAKG,UAAU,SACX,wBAAIA,UAAU,0BAAd,aAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,2BAAd,SACA,0BAAMgH,SAAU5G,KAAK+P,cACjB,yBAAKnQ,UAAU,OACX,yBAAKA,UAAU,uBACX,uBAAGA,UAAU,yBAAb,SACA,2BAAOR,KAAK,QAAQgR,YAAY,QAAQhQ,GAAG,QAAQR,UAAU,WAAWqB,SAAUjB,KAAK8P,kBAI/F,yBAAKlQ,UAAU,OACX,yBAAKA,UAAU,uBACX,uBAAGA,UAAU,yBAAb,WACA,2BAAOR,KAAK,WAAWgR,YAAY,WAAWhQ,GAAG,WAAWR,UAAU,WAAWqB,SAAUjB,KAAK8P,kBAIxG,yBAAKlQ,UAAU,oBACX,4BAAQA,UAAU,+BAA+BR,KAAK,SAAS2B,KAAK,UAApE,SAAmF,uBAAGnB,UAAU,wBAAb,QAAnF,KACA,yBAAKA,UAAU,mBACLuQ,EAAY,2BAAIA,GAAgB,OAG9C,8BAAM,kBAAC,IAAD,CAASzQ,GAAG,WAAZ,aACN,0BAAOoB,MAAO,CAACuP,MAAO,UAAU,kBAAC,IAAD,CAAS3Q,GAAG,kBAAZ,+B,GAzD3Cc,aAkFN/B,gBAdS,SAACC,GAErB,OADAa,QAAQC,IAAId,GACN,CACFyR,UAAWzR,EAAME,KAAKuR,UACtBvR,KAAMF,EAAMG,SAASD,SAIF,SAACG,GACxB,MAAM,CACFiR,OAAS,SAACM,GAAD,OAAWvR,GXlFLwR,EWkFqBD,EXjFnC,SAACvR,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAGzBN,OACA4R,2BAA2BD,EAAYN,MAAOM,EAAYL,UAC1D/Q,MAAK,WACJJ,EAAS,CAAEK,KAAM,qBAElBgE,OAAM,SAACC,GACNtE,EAAS,CAAEK,KAAM,cAAeiE,cAVlB,IAACkN,MWsFR9R,CAA4CoR,IC7E3CY,GARG,SAACpR,GAClB,OACE,yBAAKO,UAAU,eAEb,2BAAQR,KAAK,QAAQgR,YAAY,QAAQhQ,GAAG,QAAQa,SAAU5B,EAAMqR,iBCDpEC,G,4MACJjS,MAAQ,CACNuR,MAAO,GACPW,OAAQ,I,EAEVC,WAAa,WACX,OAAqC,IAA7B,EAAKnS,MAAMkS,OAAOnL,OAAe,GAAK,wB,EAEhDqL,SAAW,SAACb,GACV,IAAMW,EAAS,GAWf,OAVIX,EAAMxK,OAAS,GACfmL,EAAOG,KAAK,6CAEsC,IAAlDd,EAAMe,MAAM,IAAI9L,QAAO,SAAA+L,GAAC,MAAU,MAANA,KAAWxL,QACvCmL,EAAOG,KAAK,6BAEY,IAAxBd,EAAMiB,QAAQ,MACdN,EAAOG,KAAK,yCAGTH,G,EAETF,aAAe,SAAC1J,GACd,EAAK7C,SAAL,eACG6C,EAAErC,OAAOvE,GAAK4G,EAAErC,OAAOxB,S,EAI5BgO,aAAe,SAACnK,GAAO,IACdiJ,EAAU,EAAKvR,MAAfuR,MACDW,EAAS,EAAKE,SAASb,GACzBW,EAAOnL,OAAS,EAChB,EAAKtB,SAAS,CAAEyM,YAKhB,EAAKvR,MAAM+R,uBAAuB,EAAK1S,MAAMuR,OAC7CoB,OAAOC,MAAM,yD,uDAMT,IAAD,EACqBtR,KAAKX,MAAzBT,EADD,EACCA,KAAMuR,EADP,EACOA,UACNS,EAAW5Q,KAAKtB,MAAhBkS,OACR,OAAIhS,EAAKsB,IAAY,kBAAC,IAAD,CAAUR,GAAG,aAEhC,yBAAKE,UAAU,aACb,gIACA,0BAAMgH,SAAU5G,KAAKmR,aAAcvR,UAAU,SACzC,wBAAIA,UAAU,2BAAd,kBAEA,kBAAC,GAAD,CAAY8Q,aAAc1Q,KAAK0Q,aAAalD,KAAKxN,QACjD,0BAAMc,MAAO,CAAEuD,MAAO,QAAUrE,KAAKtB,MAAMkS,OAAX,OAChC,yBAAKhR,UAAU,eACf,4BAAQA,UAAU,+BAA+BR,KAAK,SAAS2B,KAAK,UAApE,UAAoF,uBAAGnB,UAAU,wBAAb,QAApF,KACI,yBAAKA,UAAU,mBACXuQ,EAAY,2BAAIA,GAAiB,MAErC,yBAAKvQ,UAAS,UAAKI,KAAK6Q,aAAV,WACWD,EAAO3K,KAAI,SAAAsL,GAAK,OACb,uBAAG/M,IAAK+M,GAAR,UAAuBA,c,GA/DvC/Q,aAmFb/B,gBAXS,SAACC,GACvB,MAAM,CACJyR,UAAWzR,EAAME,KAAKuR,UACtBvR,KAAMF,EAAMG,SAASD,SAGE,SAACG,GAC1B,MAAM,CACJqS,uBAAwB,SAACI,GAAD,OAAkBzS,EbzDR,SAACyS,GACrC,OAAO,SAACzS,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAgC,EAAnBoD,aACxBpD,IAGdN,OACAwS,uBAAuBI,GACvBrS,MAAK,WACJJ,EAAS,CAAEK,KAAM,8BAElBgE,OAAM,SAACC,GACNtE,EAAS,CAAEK,KAAM,uBAAwBiE,Ya8CM+N,CAAuBI,QAG/D/S,CAA8CkS,ICpFvDc,G,kDACJ,WAAYpS,GAAQ,IAAD,8BACjB,cAAMA,IAcRwR,WAAa,WACX,OAAoC,IAA7B,EAAKnS,MAAMkS,OAAOnL,OAAe,GAAK,wBAhB5B,EAmBnBqK,cAAgB,SAAC9I,GACf,EAAK7C,SAAL,eACG6C,EAAErC,OAAOvE,GAAK4G,EAAErC,OAAOxB,SArBT,EAyBnB4M,aAAe,SAAC/I,GACdA,EAAEjC,iBADkB,MAShB,EAAKrG,MANPiE,EAHkB,EAGlBA,UACAE,EAJkB,EAIlBA,SACAoN,EALkB,EAKlBA,MACAC,EANkB,EAMlBA,SACAwB,EAPkB,EAOlBA,KACAC,EARkB,EAQlBA,UAGIf,EAAS,EAAKE,SAClBnO,EACAE,EACAoN,EACAC,EACAwB,EACAC,GAGEf,EAAOnL,OAAS,EAClB,EAAKtB,SAAS,CAAEyM,WAIlB,EAAKvR,MAAMuS,OAAO,EAAKlT,QAlDN,EAqDnBoS,SAAW,SAACnO,EAAWE,EAAUoN,EAAOC,EAAUwB,EAAMC,GACtD,IAAMf,EAAS,GAiCf,OAhCyB,IAArBjO,EAAU8C,QACZmL,EAAOG,KAAK,6BAEM,IAAhBW,EAAKjM,QACPmL,EAAOG,KAAK,uBAEW,IAArBY,EAAUlM,QACZmL,EAAOG,KAAK,mCAGVY,EAAUlM,OAAS,IACrBmL,EAAOG,KAAK,yDAGU,IAApBlO,EAAS4C,QACXmL,EAAOG,KAAK,4BAGVd,EAAMxK,OAAS,GACjBmL,EAAOG,KAAK,6CAE0C,IAApDd,EAAMe,MAAM,IAAI9L,QAAO,SAAC+L,GAAD,MAAa,MAANA,KAAWxL,QAC3CmL,EAAOG,KAAK,6BAEc,IAAxBd,EAAMiB,QAAQ,MAChBN,EAAOG,KAAK,yCAGVb,EAASzK,OAAS,GACpBmL,EAAOG,KAAK,iDAGPH,GApFP,EAAKlS,MAAQ,CACXiE,UAAW,GACXE,SAAU,GACV6O,KAAM,GACNC,UAAW,GACX1B,MAAO,GACPC,SAAU,GACV2B,SAAU,GACVjB,OAAQ,IAXO,E,qDA0FT,IAAD,EACqB5Q,KAAKX,MAAzBT,EADD,EACCA,KAAMuR,EADP,EACOA,UACNS,EAAW5Q,KAAKtB,MAAhBkS,OAER,OAAIhS,EAAKsB,IAAY,kBAAC,IAAD,CAAUR,GAAG,eAGhC,kBAAC,IAAMD,SAAP,KACE,yBAAKG,UAAU,OACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,0BAAd,sBAEF,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,2BAAd,YACA,0BAAMgH,SAAU5G,KAAK+P,aAAc3P,GAAG,YACpC,yBAAKR,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,yBAAb,SACA,2BACER,KAAK,OACLgR,YAAY,aACZhQ,GAAG,YACHR,UAAU,WACVqB,SAAUjB,KAAK8P,gBAGjB,0BAAMhP,MAAO,CAAEuD,MAAO,QACnBrE,KAAKtB,MAAMkS,OAAX,QAIP,yBAAKhR,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,yBAAb,SACA,2BACER,KAAK,OACLgR,YAAY,YACZhQ,GAAG,WACHR,UAAU,WACVqB,SAAUjB,KAAK8P,gBAGjB,0BAAMhP,MAAO,CAAEuD,MAAO,QACnBrE,KAAKtB,MAAMkS,OAAX,QAIP,yBAAKhR,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,yBAAb,iBACA,2BACER,KAAK,OACLgR,YAAY,OACZhQ,GAAG,OACHR,UAAU,WACVqB,SAAUjB,KAAK8P,gBAGjB,0BAAMhP,MAAO,CAAEuD,MAAO,QACnBrE,KAAKtB,MAAMkS,OAAX,QAIP,yBAAKhR,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,yBAAb,SACA,2BACER,KAAK,OACLgR,YAAY,YACZhQ,GAAG,YACHR,UAAU,WACVqB,SAAUjB,KAAK8P,gBAGjB,0BAAMhP,MAAO,CAAEuD,MAAO,QACnBrE,KAAKtB,MAAMkS,OAAX,aAIP,yBAAKhR,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,yBAAb,SACA,2BACER,KAAK,QACLgR,YAAY,QACZhQ,GAAG,QACHR,UAAU,WACVqB,SAAUjB,KAAK8P,gBAGjB,0BAAMhP,MAAO,CAAEuD,MAAO,QACnBrE,KAAKtB,MAAMkS,OAAX,SAIP,yBAAKhR,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,yBAAb,WACA,2BACER,KAAK,WACLgR,YAAY,WACZhQ,GAAG,WACHR,UAAU,WACVqB,SAAUjB,KAAK8P,kBAIrB,yBAAKlQ,UAAU,oBACb,4BACEA,UAAU,+BACVR,KAAK,SACL2B,KAAK,UAHP,YAKW,uBAAGnB,UAAU,wBAAb,QAA6C,MAG1D,yBAAKA,UAAS,UAAKI,KAAK6Q,aAAV,WACXD,EAAO3K,KAAI,SAACsL,GAAD,OACV,uBAAG/M,IAAK+M,GAAR,UAAuBA,OAG3B,yBAAK3R,UAAU,eACb,2BAAIuQ,EAAY,2BAAIA,GAAiB,iB,GAvNpC3P,aAgPN/B,gBAbS,SAACC,GACvB,MAAO,CACLE,KAAMF,EAAMG,SAASD,KACrBuR,UAAWzR,EAAME,KAAKuR,cAIC,SAAC2B,GAC1B,MAAO,CACLF,OAAQ,SAACG,GAAD,OAAaD,EdxIH,SAACC,GACrB,OAAO,SAAChT,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAaoD,EAAmB,EAAnBA,aACnCzD,EAAWK,IACXmD,EAAYC,IAElBzD,EACGD,OACAoT,+BAA+BD,EAAQ9B,MAAO8B,EAAQ7B,UACtD/Q,MAAK,SAAC8S,GACL,OAAO5P,EACJG,WAAW,SACX0P,IAAID,EAAKE,KAAKjS,KACdkS,IAAI,CACHtP,OAAQmP,EAAKE,KAAKjS,IAClByC,UAAWoP,EAAQpP,UACnBE,SAAUkP,EAAQlP,SAClBhD,SAAUkS,EAAQpP,UAAU,GAAKoP,EAAQlP,SAAS,GAClDoN,MAAO8B,EAAQ9B,MACf0B,UAAWI,EAAQJ,UACnBD,KAAMK,EAAQL,KACdpS,KAAMd,EACNqT,SAAUE,EAAQF,SAClBQ,YAAa,IAAIrP,UAGtB7D,MAAK,WACJJ,EAAS,CAAEK,KAAM,sBAElBgE,OAAM,SAACC,GACNtE,EAAS,CAAEK,KAAM,eAAgBiE,Yc2GPuO,CAAOG,QAI1BtT,CAA6CgT,IC/OtDa,G,kDACF,WAAYjT,GAAQ,IAAD,8BACf,cAAMA,IASVwR,WAAa,WACT,OAAoC,IAA7B,EAAKnS,MAAMkS,OAAOnL,OAAe,GAAK,wBAX9B,EAclBsK,aAAe,SAAC/I,GACbA,EAAEjC,iBADiB,MAGQ,EAAKrG,MAAxB6T,EAHW,EAGXA,MAAOxG,EAHI,EAGJA,QAET6E,EAAS,EAAKE,SAASyB,EAAOxG,GAChC6E,EAAOnL,OAAS,EAChB,EAAKtB,SAAS,CAAEyM,YAIpB,EAAKvR,MAAMmT,eAAe,EAAK9T,OAC/B,EAAKW,MAAMoT,QAAQ1B,KAAK,gBA1BT,EA6BnBD,SAAW,SAACyB,EAAOxG,GACf,IAAM6E,EAAS,GASf,OARqB,IAAjB2B,EAAM9M,QACNmL,EAAOG,KAAK,wBAGZhF,EAAQtG,OAAS,GACjBmL,EAAOG,KAAK,gDAGTH,GAvCQ,EA0CnBd,cAAgB,SAAC9I,GACb,EAAK7C,SAAL,eACK6C,EAAErC,OAAOvE,GAAK4G,EAAErC,OAAOxB,SAzC5B,EAAKzE,MAAQ,CACT6T,MAAO,GACPxG,QAAS,GACT6E,OAAQ,IANG,E,qDAiDT,IACEhS,EAASoB,KAAKX,MAAdT,KACAgS,EAAW5Q,KAAKtB,MAAhBkS,OAER,OAAKhS,EAAKsB,IAGN,kBAAC,IAAMT,SAAP,KACI,yBAAKG,UAAU,SACf,wBAAI8S,MAAM,6BAAV,gBAEA,yBAAK9S,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gBACX,0BAAMgH,SAAU5G,KAAK+P,cAEjB,yBAAKnQ,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOR,KAAK,OAAOgR,YAAY,QAAQhQ,GAAG,QAAQa,SAAUjB,KAAK8P,kBAIzE,yBAAKlQ,UAAU,OACX,yBAAKA,UAAU,uBACX,8BAAUQ,GAAG,UAAUgQ,YAAY,UAAUxQ,UAAU,uBAAuBqB,SAAUjB,KAAK8P,kBAMxG,yBAAK4C,MAAM,0BACJ,6BACI,2BAAOtT,KAAK,OAAOuT,UAAQ,KAE/B,yBAAKD,MAAM,qBACP,2BAAO9S,UAAU,qBAAqBR,KAAK,OAAOgR,YAAY,iCAGtE,kBAAC,IAAD,CAAM1Q,GAAG,cAAT,IAAuB,sDAAvB,KAEA,yBAAKE,UAAS,UAAKI,KAAK6Q,aAAV,WACTD,EAAO3K,KAAI,SAAAsL,GAAK,OACb,uBAAG/M,IAAK+M,GAAR,UAAuBA,OAG/B,yBAAK3R,UAAU,oBACX,4BAAQA,UAAU,+BAA+BR,KAAK,SAAS2B,KAAK,UAApE,UAAoF,uBAAGnB,UAAU,wBAAb,QAApF,YA3CV,kBAAC,IAAD,CAAUF,GAAG,gB,GAtDfc,aAyHb/B,gBAXS,SAACC,EAAOC,GAC5B,MAAO,CACHC,KAAMF,EAAMG,SAASD,SAGF,SAACG,GACxB,MAAO,CACHyT,eAAgB,SAACI,GAAD,OAAa7T,EC3HP,SAAC6T,GAC3B,OAAM,SAAC7T,EAAUE,EAAX,GAAsD,EAA/BC,YAAgC,IAEnDmD,GAAYC,EAFsC,EAAlBA,gBAGhCxD,EAAUG,IAAWJ,SAASC,QAC9ByD,EAAWtD,IAAWJ,SAASD,KAAKsB,IAC1CmC,EAAUG,WAAW,YAAYC,IAAjC,2BACKmQ,GADL,IAEElQ,gBAAiB5D,EAAQ6D,UACzBC,eAAgB9D,EAAQ+D,SACxBN,SAAUA,EACVQ,UAAW,IAAIC,QACd7D,MAAK,WACNJ,EAAS,CAACK,KAAK,iBAAkBwT,eAChCxP,OAAM,SAACC,GACRtE,EAAS,CAACK,KAAK,uBAAwBiE,YD4GHmP,CAAeI,QAI9CnU,CAA6C6T,IEvD7C7T,gBATS,SAACC,GAEvB,OADAa,QAAQC,IAAId,GACL,CACLmU,SAAUnU,EAAM2D,UAAUyQ,QAAQD,SAClC/T,QAASJ,EAAMG,SAASC,QACxBF,KAAMF,EAAMG,SAASD,QAIVH,EApEA,SAACY,GACd,OACE,kBAAC,IAAMI,SAAP,KACE,4BAAQG,UAAU,sBAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,2BACA,uBAAGA,UAAU,4BAAb,wEAGE,kBAAC,IAAD,CAAMF,GAAG,WAAWE,UAAU,aAAamT,KAAK,MAAhD,iBAMJ,yBAAKnT,UAAU,cACb,wBAAIA,UAAU,cAAd,YACA,4BACE,4BACE,kBAAC,IAAD,CAAMF,GAAG,eAAeE,UAAU,aAAamT,KAAK,MAApD,eAIF,4BACE,kBAAC,IAAD,CAAMrT,GAAG,aAAaE,UAAU,aAAamT,KAAK,MAAlD,gBAMN,yBAAKnT,UAAU,cACb,wBAAIA,UAAU,cAAd,WACA,4BACE,4BACE,kBAAC,IAAD,CAASF,GAAG,UAAUE,UAAU,aAAamT,KAAK,MAAlD,WAIF,4BACE,kBAAC,IAAD,CAASrT,GAAG,UAAUE,UAAU,aAAamT,KAAK,MAAlD,eAQV,yBAAKnT,UAAU,oBACb,yBAAKA,UAAU,aAAf,cACa,uBAAGmT,KAAK,0BAAR,sBCpDVC,GAAb,uKAEI,OACE,6BACE,yBAAKpT,UAAU,eACb,wBAAIA,UAAU,6BAAd,cACA,6BACA,yBACES,IACEL,KAAKX,MAAMP,QAAQ+S,UACnB,sCAEF1R,IAAI,kBACJyM,OAAO,MACPtL,MAAM,QAER,2BACG,IACD,4CACCtB,KAAKX,MAAMP,QAAQ6D,UAAW,KAEjC,2BACG,IACD,6CACC3C,KAAKX,MAAMP,QAAQ+D,SAAU,KAEhC,2BACG,IACD,yCACC7C,KAAKX,MAAMP,QAAQmR,MAAO,KAE7B,2BACG,IACD,wCACCjQ,KAAKX,MAAMP,QAAQ4S,KAAM,KAE5B,2BACG,IACD,oDACC1R,KAAKX,MAAMP,QAAQ6S,UAAW,WAvC3C,GAA6BpR,IAAMC,WAsDpB/B,gBAPS,SAACC,GACvB,MAAO,CACLE,KAAMF,EAAMG,SAASD,KACrBE,QAASJ,EAAMG,SAASC,WAIbL,CAAyBuU,ICtDlCC,G,kDACF,WAAY5T,GAAQ,IAAD,8BACf,cAAMA,IAWVyR,SAAW,SAAC/P,EAAMkP,EAAOiD,GACrB,IAAMtC,EAAS,GAiBf,OAhBoB,IAAhB7P,EAAK0E,QACLmL,EAAOG,KAAK,6BAEZd,EAAMxK,OAAS,GACfmL,EAAOG,KAAK,6CAEsC,IAAlDd,EAAMe,MAAM,IAAI9L,QAAO,SAAA+L,GAAC,MAAU,MAANA,KAAWxL,QACvCmL,EAAOG,KAAK,6BAEY,IAAxBd,EAAMiB,QAAQ,MACdN,EAAOG,KAAK,yCAEO,IAAnBmC,EAAQzN,QACRmL,EAAOG,KAAK,0BAGTH,GA9BQ,EAiCnBC,WAAa,WACT,OAAqC,IAA7B,EAAKnS,MAAMkS,OAAOnL,OAAe,GAAK,wBAlC/B,EAqCnBsK,aAAe,SAAC/I,GACZA,EAAEjC,iBADgB,MAGa,EAAKrG,MAA5BqC,EAHU,EAGVA,KAAKkP,EAHK,EAGLA,MAAMiD,EAHD,EAGCA,QAEbtC,EAAS,EAAKE,SAAS/P,EAAKkP,EAAMiD,GAGpCtC,EAAOnL,OAAS,EAChB,EAAKtB,SAAS,CAAEyM,YAIpB,EAAKvR,MAAM8T,YAAY,EAAKzU,OAC5B,EAAKW,MAAMoT,QAAQ1B,KAAK,KACxBM,OAAOC,MAAM,0DApDE,EAsDnBxB,cAAgB,SAAC9I,GACb,EAAK7C,SAAL,eACK6C,EAAErC,OAAOvE,GAAK4G,EAAErC,OAAOxB,SArD5B,EAAKzE,MAAQ,CACTqC,KAAM,GACNkP,MAAM,GACNiD,QAAQ,GACRtC,OAAQ,IAPG,E,qDA4DX,IAEAA,EAAW5Q,KAAKtB,MAAhBkS,OACT,OACC,kBAAC,IAAMnR,SAAP,KACY,yBAAKG,UAAU,SACX,wBAAIA,UAAU,0BAAd,iBAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gBACX,0BAAMgH,SAAU5G,KAAK+P,cAEjB,yBAAKnQ,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOR,KAAK,OAAOgR,YAAY,OAAOhQ,GAAG,OAAOa,SAAUjB,KAAK8P,kBAIvE,yBAAKlQ,UAAU,OACX,yBAAKA,UAAU,uBACX,2BAAOR,KAAK,OAAOgR,YAAY,QAAQhQ,GAAG,QAAQa,SAAUjB,KAAK8P,kBAIzE,yBAAKlQ,UAAU,OACX,yBAAKA,UAAU,uBACX,8BAAUQ,GAAG,UAAUgQ,YAAY,UAAUnP,SAAUjB,KAAK8P,kBAIpE,yBAAKlQ,UAAS,UAAKI,KAAK6Q,aAAV,WACTD,EAAO3K,KAAI,SAAAsL,GAAK,OACb,uBAAG/M,IAAK+M,GAAR,UAAuBA,OAG/B,yBAAK3R,UAAU,oBACX,4BAAQA,UAAU,+BAA+BR,KAAK,SAAS2B,KAAK,UAApE,UAAoF,uBAAGnB,UAAU,wBAAb,QAApF,gB,GAnGdW,IAAMC,WA8HjB/B,gBAXW,SAACC,EAAOC,GAC9B,MAAO,CACHC,KAAMF,EAAMG,SAASD,SAGF,SAACG,GACxB,MAAO,CACHoU,YAAa,SAACD,GAAD,OAAanU,EnBrEP,SAACmU,GAC1B,OAAO,SAACnU,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IAEvDmD,GAAYC,EAF0C,EAAnBA,gBAGnCxD,EAAUG,IAAWJ,SAASC,QAC9ByD,EAAWtD,IAAWJ,SAASD,KAAKsB,IAC1CmC,EACGG,WAAW,YACXC,IAFH,2BAGOyQ,GAHP,IAIIxQ,gBAAiB5D,EAAQ6D,UACzBC,eAAgB9D,EAAQ+D,SACxBN,SAAUA,EACVQ,UAAW,IAAIC,QAEhB7D,MAAK,WACJJ,EAAS,CAAEK,KAAM,eAAgB8T,eAElC9P,OAAM,SAACC,GACNtE,EAAS,CAAEK,KAAM,qBAAsBiE,YmBkDJ8P,CAAYD,QAIxCzU,CAA6CwU,I,+BC9H7C,SAASG,KAAqB,IAAD,EAChB7S,IAAM+C,SAAS,CACvC+P,QAAS,CACP,CAAEd,MAAO,OAAQe,MAAO,QACxB,CAAEf,MAAO,UAAWe,MAAO,WAC3B,CAAEf,MAAO,aAAce,MAAO,YAAalU,KAAM,WACjD,CACEmT,MAAO,cACPe,MAAO,YACPC,OAAQ,CAAEC,GAAI,gBAAYC,GAAI,yBAGlCxJ,KAAM,CACJ,CAAElJ,KAAM,SAAU2S,QAAS,QAASC,UAAW,KAAMC,UAAW,IAChE,CACE7S,KAAM,iBACN2S,QAAS,QACTC,UAAW,KACXC,UAAW,OAlByB,mBACnClV,EADmC,KAC5ByF,EAD4B,KAuB1C,OACE,kBAAC,KAAD,CACEoO,MAAM,mBACNc,QAAS3U,EAAM2U,QACfpJ,KAAMvL,EAAMuL,KACZ4J,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTD,IACA9P,GAAS,SAACS,GACR,IAAMqF,EAAI,aAAOrF,EAAUqF,MAE3B,OADAA,EAAK8G,KAAKgD,GACH,2BAAKnP,GAAZ,IAAuBqF,cAExB,SAEPkK,YAAa,SAACJ,EAASK,GAAV,OACX,IAAIJ,SAAQ,SAACC,GACXC,YAAW,WACTD,IACIG,GACFjQ,GAAS,SAACS,GACR,IAAMqF,EAAI,aAAOrF,EAAUqF,MAE3B,OADAA,EAAKA,EAAKiH,QAAQkD,IAAYL,EACvB,2BAAKnP,GAAZ,IAAuBqF,cAG1B,SAEPoK,YAAa,SAACD,GAAD,OACX,IAAIJ,SAAQ,SAACC,GACXC,YAAW,WACTD,IACA9P,GAAS,SAACS,GACR,IAAMqF,EAAI,aAAOrF,EAAUqF,MAE3B,OADAA,EAAKqK,OAAOrK,EAAKiH,QAAQkD,GAAU,GAC5B,2BAAKxP,GAAZ,IAAuBqF,cAExB,YC1DR,IA+BDsK,G,uKAEF,OACE,yBAAK7B,MAAM,qBAAqBtS,GAAG,gBACjC,yBAAKsS,MAAM,aAET,yBAAKA,MAAM,OACT,kBAACU,GAAD,a,GAPW7S,IAAMC,WAcdoP,kBAAU2E,I,+BC5BVC,GAtBO,SAACnV,GAAW,IACtBoV,EAAkBpV,EAAlBoV,cACR,OACI,yBAAK7U,UAAU,sBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cAAd,iBACA,4BACK6U,GAAiBA,EAAcxO,KAAI,SAAAyO,GAChC,OACI,wBAAIlQ,IAAKkQ,EAAKtU,IACV,0BAAMR,UAAU,aAAa8U,EAAKvC,KAAlC,OACA,0BAAMvS,UAAU,gBAAgB8U,EAAK3I,SACrC,0BAAMnM,UAAU,aAAa+U,KAAOD,EAAKE,KAAKC,UAAUC,mB,oECKlFC,GAAO,GACAC,GAAb,kDACE,WAAY3V,GAAQ,IAAD,8BACjB,cAAMA,IAEDX,MAAQ,CACXuW,SAAU,IAJK,EADrB,iEASwB,IACZA,EAAajV,KAAKtB,MAAlBuW,SACU3S,0BAEfE,WAAW,SACX0S,MACA/V,MAAK,SAAC8K,GACLA,EAAKkL,SAAQ,SAACjD,GAEZ+C,EAASlE,KAAKmB,EAAIjI,WAGpB1K,QAAQC,IAAI,QAASyV,MAEzB1M,GACG6M,MAAM,kBACNC,UACAlW,MAAK,SAAUmW,GACdA,EAAIC,MAAMJ,SAAQ,SAAUK,GAC1BA,EAAUC,iBAAiBtW,MAAK,SAAUwO,GACxCpO,QAAQC,IAAI,mBAAoBmO,GAChCoH,GAAKhE,KAAKpD,MAEZpO,QAAQC,IAAI,YAAagW,EAAUE,YACnC,IAAIhL,EAAO,KACPiL,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO,eAChBF,EAAIG,aAAe,OACnBH,EAAII,OAAS,WACXrL,EAAOiL,EAAIK,SACXzW,QAAQC,IAAI,OAAQkL,IAOtBiL,EAAIM,aAGP7S,OAAM,SAAUmO,GACfhS,QAAQC,IAAI+R,QAlDpB,+BAsDY,IAAD,EACwCvR,KAAKX,MAA5C6W,EADD,EACCA,MAAOzB,EADR,EACQA,cAAe7V,EADvB,EACuBA,KAAMuX,EAD7B,EAC6BA,OAE9BC,EAAkBC,cAAW,SAACjV,GAAD,MAAY,CAC7CkV,KAAM,CACJC,gBAAiBnV,EAAMoV,QAAQC,OAAOC,MACtCrS,MAAOjD,EAAMoV,QAAQC,OAAOE,OAE9BC,KAAM,CACJC,SAAU,OANUR,CAQpBS,MAEEC,EAAiBV,cAAW,SAACjV,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpBkV,gBAAiBnV,EAAMoV,QAAQQ,WAAWC,aAHzBZ,CAMnBa,MAEJ,OAAKtY,EAAKsB,IAGR,yBAAKN,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,8CACA,8BAEF,yBAAKA,UAAU,cACb,kBAAC,GAAD,CAAe6U,cAAeA,MAGlC,yBAAK7U,UAAU,wBACb,kDACA,8BAEF,yBAAKA,UAAU,wBACb,+BACE,+BACGmV,GAAK9O,KAAI,SAACkM,GACT,OACE,wBAAI3N,IAAK2S,KAAKC,UACZ,4BACE,uBAAGrE,KAAMZ,EAAMxN,OAAO,SAAS0S,IAAI,uBACjC,kBAAC1Q,EAAA,EAAD,KACE,uBAAG/G,UAAU,oBACZuS,YAUnB,yBAAKvS,UAAU,wBACb,sCACA,6BACA,kBAAC0X,GAAA,EAAD,CAAOC,aAAW,oBAChB,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,KACE,kBAACd,EAAD,aACA,kBAACA,EAAD,cACA,kBAACA,EAAD,kBACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,kBAGJ,kBAACqB,GAAA,EAAD,KACGvB,GACCA,EAAMjQ,KAAI,SAACkM,GACT,OACE,kBAAC4E,EAAD,CAAgBvS,IAAK2S,KAAKC,UACxB,kBAAChB,EAAD,KAAkBjE,EAAKT,MACvB,kBAAC0E,EAAD,KAAkBjE,EAAKlC,OACvB,kBAACmG,EAAD,KAAkBjE,EAAKxP,WACvB,kBAACyT,EAAD,KAAkBjE,EAAKtS,UACvB,kBAACuW,EAAD,KAAkBjE,EAAKtP,UACvB,kBAACuT,EAAD,KACE,kBAAC,IAAD,CACExW,UAAU,+BACVF,GAAI,QAAUyS,EAAK/R,GACnBmS,MAAM,aAHR,QAOA,6BACA,6BACA,6BACA,4BACE3S,UAAU,+BACVR,KAAK,SACL2B,KAAK,UAHP,SAME,uBAAGnB,UAAU,wBAAb,2BASlB,yBAAKA,UAAU,wBACb,uCACA,6BACA,kBAAC0X,GAAA,EAAD,CAAOC,aAAW,oBAChB,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,KACE,kBAACd,EAAD,oBACA,kBAACA,EAAD,qBACA,kBAACA,EAAD,kCACA,kBAACA,EAAD,qBACA,kBAACA,EAAD,kBAGJ,kBAACqB,GAAA,EAAD,KACGtB,GACCA,EAAOlQ,KAAI,SAAChD,GACV,OACE,kBAAC8T,EAAD,CAAgBvS,IAAK2S,KAAKC,UACxB,kBAAChB,EAAD,KAAkBnT,EAAMP,iBACxB,kBAAC0T,EAAD,KACGnT,EAAMF,UAAU8R,SAAS6C,gBAE5B,kBAACtB,EAAD,KAAkBnT,EAAMA,OACxB,kBAACmT,EAAD,KAAkBnT,EAAMC,OAAOC,OAC/B,kBAACiT,EAAD,KACE,kBAAC,IAAD,CACExW,UAAU,+BACVF,GAAI,aAAeuD,EAAM7C,GACzBmS,MAAM,aAHR,QAOA,6BACA,6BACA,6BACA,4BACE3S,UAAU,+BACVR,KAAK,SACL2B,KAAK,UAHP,SAME,uBAAGnB,UAAU,wBAAb,4BAhIA,kBAAC,IAAD,CAAUF,GAAG,gBA3EvC,GAAgCa,IAAMC,WAkPvBoP,gBACbnR,aA1BsB,SAACC,GACvB,MAAO,CACLwB,IAAKxB,EAAMG,SAASD,KAAKsB,IACzB2S,SAAUnU,EAAM2D,UAAUyQ,QAAQD,SAClC4B,cAAe/V,EAAM2D,UAAUyQ,QAAQ2B,cACvCyB,MAAOxX,EAAM2D,UAAUyQ,QAAQoD,MAC/BtX,KAAMF,EAAMG,SAASD,KACrBuX,OAAQzX,EAAM2D,UAAUyQ,QAAQqD,OAChCrX,QAASJ,EAAMG,SAASC,YAmB1B6Y,6BAAiB,SAACtY,GAChB,MAA2B,UAAvBA,EAAMP,QAAQQ,KACT,CACL,CACEkD,WAAY,UAEd,CACEA,WAAY,SAEd,CACEA,WAAY,gBACZoV,MAAO,EACPC,QAAS,CAAC,OAAQ,UAGjB,CACL,CACErV,WAAY,SACZsV,MAAO,CAAC,SAAU,KAAMzY,EAAMa,MAEhC,CACEsC,WAAY,SAEd,CACEA,WAAY,gBACZoV,MAAO,EACPC,QAAS,CAAC,OAAQ,aA5BXjI,CAgCboF,IC8Ba+C,G,kDA7Tb,WAAY1Y,GAAQ,IAAD,8BACjB,cAAMA,IAFRwL,MAAO,IAAI7H,MAAOgV,UACC,EAenBpR,SAAW,SAACI,GACVA,EAAEjC,iBADc,MASZ,EAAKrG,MANPgT,EAHc,EAGdA,KACAzB,EAJc,EAIdA,MACAtN,EALc,EAKdA,UACAE,EANc,EAMdA,SACA8O,EAPc,EAOdA,UACAE,EARc,EAQdA,SAEIjB,EAAS,EAAKE,SAASnO,EAAWE,EAAUoN,EAAOyB,EAAMC,GAE/D,GAAIf,EAAOnL,OAAS,EAClB,EAAKtB,SAAS,CAAEyM,eADlB,CAIA,IAAMqH,EAAYpZ,IACfwD,YACAG,WAAW,SACX0P,IAAI,EAAK7S,MAAM6Y,MAAMC,OAAO/X,IAC/Bb,QAAQC,IAAIyY,GACZA,EACGG,OAAO,CACN1G,OACAzB,QACAtN,YACAE,WACA8O,YACAE,aAED1S,MAAK,SAACkZ,GACL,EAAKlU,SAAS,CACZK,IAAK,GACLkN,KAAM,GACNzB,MAAO,GACPtN,UAAW,GACXE,SAAU,GACV8O,UAAW,GACXE,SAAU,KAEZ,EAAKxS,MAAMoT,QAAQ1B,KAAnB,kBAED3N,OAAM,SAACmO,GACNhS,QAAQgS,MAAM,0BAA2BA,QA1D5B,EA8DnBb,aAAe,SAAC1J,GACd,GAAIA,EAAErC,OAAO2T,MAAM,GAAI,CACrB,IAAMC,EAAQvR,EAAErC,OAAO2T,MAAM,GACzBtR,EAAErC,OAAO2T,MAAMlZ,KAAO,EACxBG,QAAQC,IAAI,UAEZD,QAAQC,IAAI,gBAEd,EAAK2E,UAAS,iBAAO,CAAEoU,QAAOC,UAAWD,EAAMxX,WAtEhC,EAyEnB8P,WAAa,WACX,OAAoC,IAA7B,EAAKnS,MAAMkS,OAAOnL,OAAe,GAAK,wBA1E5B,EA6EnBqL,SAAW,SAACnO,EAAWE,EAAUoN,EAAOyB,EAAMC,EAAW4G,GACvD,IAAM3H,EAAS,GAgCf,OA/ByB,IAArBjO,EAAU8C,QACZmL,EAAOG,KAAK,6BAEM,IAAhBW,EAAKjM,QACPmL,EAAOG,KAAK,uBAEW,IAArBY,EAAUlM,QACZmL,EAAOG,KAAK,mCAGVY,EAAUlM,OAAS,IACrBmL,EAAOG,KAAK,yDAGU,IAApBlO,EAAS4C,QACXmL,EAAOG,KAAK,4BAGVd,EAAMxK,OAAS,GACjBmL,EAAOG,KAAK,6CAE0C,IAApDd,EAAMe,MAAM,IAAI9L,QAAO,SAAC+L,GAAD,MAAa,MAANA,KAAWxL,QAC3CmL,EAAOG,KAAK,6BAEc,IAAxBd,EAAMiB,QAAQ,MAChBN,EAAOG,KAAK,yCAMPH,GA9GU,EAgHnB6H,aAAe,WAAO,IACZF,EAAU,EAAK7Z,MAAf6Z,MACR,GAAa,MAATA,EACFhZ,QAAQC,IAAI,oCACP,CACLD,QAAQC,IAAI,UACZ,IAAMwL,EAAW,EAAKtM,MAAMiE,UAAY,IAAM4V,EAAMxX,KAEjCuH,EAAQE,IAAR,wBAA6BwC,IAAYC,IAAIsN,GAErD/L,GACT,iBACA,SAACkM,GAEC,IAAMC,EAAWxB,KAAKyB,MACnBF,EAASG,iBAAmBH,EAASI,WAAc,KAEtD,EAAK3U,SAAS,CAAEwU,gBAElB,SAACpH,GAEChS,QAAQC,IAAI+R,MAEd,WAEEjJ,EACGE,IAAI,iBACJ4M,MAAMpK,GACNyK,iBACAtW,MAAK,SAAC0S,GACL,EAAK1N,SAAS,CACZK,IAAK,GACLqN,SAAUA,IAEZtS,QAAQC,IAAIqS,WAlJL,EAkLnB5Q,SAAW,SAAC+F,GACV,IAAMtI,EAAQ,EAAKA,MACnBA,EAAMsI,EAAErC,OAAO5D,MAAQiG,EAAErC,OAAOxB,MAChC,EAAKgB,SAAS,CAAE+R,MAAOxX,KAnLvB,EAAKA,MAAQ,CACX8F,IAAK,GACLkN,KAAM,GACNzB,MAAO,GACPtN,UAAW,GACXE,SAAU,GACV8O,UAAW,GACXE,SAAU,GACV2G,UAAW,GACX5H,OAAQ,IAXO,E,gEAyJE,IAAD,OACN/R,IACTwD,YACAG,WAAW,SACX0P,IAAIlS,KAAKX,MAAM6Y,MAAMC,OAAO/X,IAE3B8U,MAAM/V,MAAK,SAAC+S,GACd,GAAIA,EAAI6G,OAAQ,CACd,IAAM7C,EAAQhE,EAAIjI,OAClB,EAAK9F,SAAS,CACZK,IAAK0N,EAAI9R,GACTsR,KAAMwE,EAAMxE,KACZzB,MAAOiG,EAAMjG,MACbtN,UAAWuT,EAAMvT,UACjBE,SAAUqT,EAAMrT,SAChB8O,UAAWuE,EAAMvE,UACjB9R,SAAUqW,EAAMrW,SAChBgS,SAAUqE,EAAMrE,gBAGlBtS,QAAQC,IAAI,0B,+BAWR,IACAoR,EAAW5Q,KAAKtB,MAAhBkS,OACR,OACE,yBAAKhR,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,6BAAd,cAEF,yBAAKA,UAAU,cACb,4BACE,kBAAC,IAAD,CAAMF,GAAE,cAAiBE,UAAU,0BAAnC,wBAIF,0BAAMgH,SAAU5G,KAAK4G,UACnB,yBAAKhH,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,SADF,IACuC,6BACrC,2BACE5Z,KAAK,OACLQ,UAAU,eACVmB,KAAK,OACLoC,MAAOnD,KAAKtB,MAAMgT,KAClBzQ,SAAUjB,KAAKiB,SACfmP,YAAY,WAGhB,yBAAKxQ,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,UADF,IACwC,6BACtC,2BACE5Z,KAAK,OACLQ,UAAU,eACVmB,KAAK,QACLoC,MAAOnD,KAAKtB,MAAMuR,MAClBhP,SAAUjB,KAAKiB,SACfmP,YAAY,WAGhB,yBAAKxQ,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,eADF,IAC6C,6BAC3C,2BACE5Z,KAAK,OACLQ,UAAU,eACVmB,KAAK,YACLoC,MAAOnD,KAAKtB,MAAMiE,UAClB1B,SAAUjB,KAAKiB,SACfmP,YAAY,WAGhB,yBAAKxQ,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,cADF,IAC4C,6BAC1C,2BACE5Z,KAAK,OACLQ,UAAU,eACVmB,KAAK,WACLoC,MAAOnD,KAAKtB,MAAMmE,SAClB5B,SAAUjB,KAAKiB,SACfmP,YAAY,WAGhB,yBAAKxQ,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,cADF,IAC4C,6BAC1C,2BACE5Z,KAAK,OACLQ,UAAU,eACVmB,KAAK,YACLoC,MAAOnD,KAAKtB,MAAMiT,UAClB1Q,SAAUjB,KAAKiB,SACfmP,YAAY,UAEd,0BAAMtP,MAAO,CAAEuD,MAAO,QACnBrE,KAAKtB,MAAMkS,OAAX,YAGL,yBAAKhR,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,aADF,IAC2C,6BACzC,2BAAIhZ,KAAKtB,MAAMmB,WAEjB,yBAAKD,UAAU,cACb,2BAAOoZ,QAAQ,SAAf,aADF,IAC2C,6BACzC,2BAAIhZ,KAAKtB,MAAMmT,WAEjB,4BAAQzS,KAAK,SAASQ,UAAU,mBAAhC,YAKJ,yBAAKA,UAAU,UACb,6BACA,wBAAIA,UAAU,cAAd,0BACA,6BACA,6BACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,OACb,sCACA,2BAAOR,KAAK,OAAO6B,SAAUjB,KAAK0Q,gBAEpC,yBAAK9Q,UAAU,qBACb,2BACEA,UAAU,qBACVqB,SAAU,aACV7B,KAAK,OACL+D,MAAOnD,KAAKtB,MAAM8Z,cAIxB,4BACEpZ,KAAK,SACLO,QAASK,KAAKyY,aACd7Y,UAAU,gCAET,IALH,SAMS,KAET,6BACA,6BACA,yBACES,IAAKL,KAAKtB,MAAMmT,UAAY,sCAC5B1R,IAAI,kBACJyM,OAAO,MACPtL,MAAM,UAIZ,yBAAK1B,UAAS,UAAKI,KAAK6Q,aAAV,WACXD,EAAO3K,KAAI,SAACsL,GAAD,OACV,uBAAG/M,IAAK+M,GAAR,UAAuBA,Y,GAvTZ/Q,a,UCDjByD,GAAU,CACd,CAAEd,MAAO,YAAazC,MAAO,aAC7B,CAAEyC,MAAO,cAAezC,MAAO,eAC/B,CAAEyC,MAAO,YAAazC,MAAO,cA4HhBuY,G,kDAxHb,WAAY5Z,GAAQ,IAAD,8BACjB,cAAMA,IAFRwL,MAAO,IAAI7H,MAAOgV,UACC,EAUnBtH,aAAe,SAACxN,GACd,EAAKiB,SAAS,CAAEjB,WAAU,kBACxB3D,QAAQC,IAAR,mBAAgC,EAAKd,MAAMwE,OAAOC,WAZnC,EAiBnByD,SAAW,SAACI,GACVA,EAAEjC,iBADc,MAEU,EAAKrG,MAAvBuE,EAFQ,EAERA,MAAOC,EAFC,EAEDA,OAET+U,EAAYpZ,IACfwD,YACAG,WAAW,UACX0P,IAAI,EAAK7S,MAAM6Y,MAAMC,OAAO/X,IAC/Bb,QAAQC,IAAIyY,GACZA,EACGG,OAAO,CACNnV,QACAC,WAED/D,MAAK,SAACkZ,GACL,EAAKlU,SAAS,CACZK,IAAK,GACLvB,QACAC,OAAQ,EAAKxE,MAAMwE,OAAOC,QAE5B,EAAK9D,MAAMoT,QAAQ1B,KAAnB,gBAED3N,OAAM,SAACmO,GACNhS,QAAQgS,MAAM,0BAA2BA,OAxC5B,EAiEnBtQ,SAAW,SAAC+F,GACV,IAAMtI,EAAQ,EAAKA,MACnBA,EAAMsI,EAAErC,OAAO5D,MAAQiG,EAAErC,OAAOxB,MAChC,EAAKgB,SAAS,CAAE+R,MAAOxX,KAlEvB,EAAKA,MAAQ,CACX8F,IAAK,GACLvB,MAAO,GACPC,OAAQ,GACRgW,eAAgB,MAND,E,gEA4CE,IAAD,OACNra,IACTwD,YACAG,WAAW,UACX0P,IAAIlS,KAAKX,MAAM6Y,MAAMC,OAAO/X,IAE3B8U,MAAM/V,MAAK,SAAC+S,GACd,GAAIA,EAAI6G,OAAQ,CACd,IAAM5C,EAASjE,EAAIjI,OACnB1K,QAAQC,IAAI,QAAS2W,EAAOlT,OAC5B,EAAKkB,SAAS,CACZK,IAAK0N,EAAI9R,GACT6C,MAAOkT,EAAOlT,MACdC,OAAQiT,EAAOjT,cAGjB3D,QAAQC,IAAI,0B,+BAahB,OADAD,QAAQC,IAAI,cAAeQ,KAAKtB,MAAMuE,OAEpC,yBAAKyP,MAAM,aACT,yBAAKA,MAAM,uBACT,yBAAKA,MAAM,iBACT,wBAAIA,MAAM,6BAAV,eAEF,yBAAK9S,UAAU,YACf,yBAAK8S,MAAM,cACT,4BACE,kBAAC,IAAD,CAAMhT,GAAE,YAAeE,UAAU,0BAAjC,oBAIF,0BAAMgH,SAAU5G,KAAK4G,UACnB,yBAAK8L,MAAM,cACT,2BAAOyG,IAAI,SAAX,UADF,IACoC,6BAClC,2BACE/Z,KAAK,OACLsT,MAAM,eACN3R,KAAK,QACLoC,MAAOnD,KAAKtB,MAAMuE,MAClBhC,SAAUjB,KAAKiB,SACfmP,YAAY,WAGhB,yBAAKsC,MAAM,cACT,2BAAOyG,IAAI,SAAX,WADF,IACqC,6BACnC,kBAAC,KAAD,CACEhW,MAAOnD,KAAKtB,MAAMwE,OAClBjC,SAAUjB,KAAK0Q,aACfzM,QAASA,KAEX,6BACA,8BAGF,4BAAQ7E,KAAK,SAASsT,MAAM,mBAA5B,kB,GA/GUlS,a,6QCgBP/B,gBANO,SAACC,GACrB,MAAO,CACLE,KAAMF,EAAMG,SAASD,KACrBE,QAASJ,EAAMG,SAASC,WAGbL,EApBE,SAACK,EAASF,GACzB,IAAMqB,EAAQrB,EAAKsB,IACf,kBAAC,EAAD,MAEI,kBAAC,EAAD,CAAepB,QAASA,IAEhC,OAEI,6BACCmB,MCYHiB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyF,QAAS,QAEXsS,OAAQ,CACN7C,gBAAiB,UACjB8C,WAAYjY,EAAMkY,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQpY,EAAMkY,YAAYE,OAAOC,MACjCC,SAAUtY,EAAMkY,YAAYI,SAASC,iBAGzCC,YAAa,CACXtY,MAAM,eAAD,OAdW,IAcX,OACLuY,WAfgB,IAgBhBR,WAAYjY,EAAMkY,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQpY,EAAMkY,YAAYE,OAAOM,QACjCJ,SAAUtY,EAAMkY,YAAYI,SAASK,kBAGzCC,WAAY,CACVhY,YAAaZ,EAAMI,QAAQ,IAE7ByY,KAAM,CACJnT,QAAS,QAEXoT,OAAQ,CACN5Y,MA5BgB,IA6BhB6Y,WAAY,GAEdC,YAAa,CACX9Y,MAhCgB,KAkClB+Y,aAAa,yBACXvT,QAAS,OACTwT,WAAY,SACZC,QAASnZ,EAAMI,QAAQ,EAAG,IAEvBJ,EAAMoZ,OAAOC,SALN,IAMVC,eAAgB,aAElB3O,QAAS,CACP4O,SAAU,EACVJ,QAASnZ,EAAMI,QAAQ,GACvB6X,WAAYjY,EAAMkY,YAAYC,OAAO,SAAU,CAC7CC,OAAQpY,EAAMkY,YAAYE,OAAOC,MACjCC,SAAUtY,EAAMkY,YAAYI,SAASC,gBAEvCE,YAjDgB,KAmDlBe,aAAc,CACZvB,WAAYjY,EAAMkY,YAAYC,OAAO,SAAU,CAC7CC,OAAQpY,EAAMkY,YAAYE,OAAOM,QACjCJ,SAAUtY,EAAMkY,YAAYI,SAASK,iBAEvCF,WAAY,GAEdgB,UAAW,CACTxW,MAAO,eAII,SAASyW,KACtB,IAAMnZ,EAAUT,KACVE,EAAQ2Z,eAF+B,EAGrBxa,IAAM+C,UAAS,GAHM,mBAGtCuS,EAHsC,KAGhCmF,EAHgC,KASvCC,EAAoB,WACxBD,GAAQ,IAGV,OACE,yBAAKpb,UAAW+B,EAAQN,MACtB,kBAAC6Z,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACEzO,SAAS,QACT9M,UAAWwb,aAAKzZ,EAAQyX,OAAT,eACZzX,EAAQiY,YAAc/D,KAGzB,kBAACwF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEjX,MAAM,UACNkT,aAAW,cACX5X,QArBe,WACvBqb,GAAQ,IAqBAO,KAAK,QACL3b,UAAWwb,aAAKzZ,EAAQqY,WAAYnE,GAAQlU,EAAQsY,OAEpD,kBAAC,KAAD,OAEF,kBAAC,EAAD,QAGJ,kBAACuB,GAAA,EAAD,CACE5b,UAAW+B,EAAQuY,OACnBrY,QAAQ,aACR4Z,OAAO,OACP5F,KAAMA,EACNlU,QAAS,CACP+Z,MAAO/Z,EAAQyY,cAGjB,yBAAKxa,UAAW+B,EAAQ0Y,cAEtB,kBAAC,GAAD,MACA,kBAACiB,GAAA,EAAD,CAAY3b,QAASsb,GACE,QAApB7Z,EAAMua,UACL,kBAAC,KAAD,MAEA,kBAAC,KAAD,QAIN,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAAMnc,GAAG,YAAYC,QAASsb,GAC5B,kBAACa,GAAA,EAAD,CAAU/Z,QAAM,GACd,kBAACga,GAAA,EAAD,KACE,kBAAC,KAAD,CAASnc,UAAW+B,EAAQkZ,aAE9B,kBAACmB,GAAA,EAAD,CAAcC,QAAQ,gBAG1B,kBAACL,GAAA,EAAD,MACA,kBAAC,IAAD,CAAMlc,GAAG,aAAaC,QAASsb,GAC7B,kBAACa,GAAA,EAAD,CAAU/Z,QAAM,GACd,kBAACga,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQnc,UAAW+B,EAAQkZ,aAE7B,kBAACmB,GAAA,EAAD,CAAcC,QAAQ,gBAG1B,kBAAC,IAAD,CAAMvc,GAAG,eAAeC,QAASsb,GAC/B,kBAACa,GAAA,EAAD,CAAU/Z,QAAM,GACd,kBAACga,GAAA,EAAD,KACE,kBAAC,KAAD,CAAUnc,UAAW+B,EAAQkZ,aAE/B,kBAACmB,GAAA,EAAD,CAAcC,QAAQ,kBAI5B,kBAACL,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KACE,uBACE9I,KAAK,uBACLpO,OAAO,QACPhF,QAASsb,GAET,kBAACa,GAAA,EAAD,CAAU/Z,QAAM,GACd,kBAACga,GAAA,EAAD,KACE,kBAAC,KAAD,CAAUnc,UAAW+B,EAAQkZ,aAE/B,kBAACmB,GAAA,EAAD,CAAcC,QAAQ,yBCvK7B,IAAMC,GAAb,kDACE,WAAY7c,GAAQ,IAAD,8BACjB,cAAMA,IAEDX,MAAQ,GAHI,EADrB,qDAMY,IACAyX,EAAWnW,KAAKX,MAAhB8W,OAEFC,EAAkBC,cAAW,SAACjV,GAAD,MAAY,CAC7CkV,KAAM,CACJC,gBAAiBnV,EAAMoV,QAAQC,OAAOC,MACtCrS,MAAOjD,EAAMoV,QAAQC,OAAOE,OAE9BC,KAAM,CACJC,SAAU,OANUR,CAQpBS,MAEEC,EAAiBV,cAAW,SAACjV,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpBkV,gBAAiBnV,EAAMoV,QAAQQ,WAAWC,aAHzBZ,CAMnBa,MACJ,OACE,yBAAKtX,UAAU,aACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,6BAAd,aACA,8BAEF,yBAAKA,UAAU,wBACb,kBAAC0X,GAAA,EAAD,CAAOC,aAAW,oBAChB,kBAACC,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,KACE,kBAACd,EAAD,oBACA,kBAACA,EAAD,qBACA,kBAACA,EAAD,kCACA,kBAACA,EAAD,qBACA,kBAACA,EAAD,kBAGJ,kBAACqB,GAAA,EAAD,KACGtB,GACCA,EAAOlQ,KAAI,SAAChD,GACV,OACE,kBAAC8T,EAAD,CAAgBvS,IAAK2S,KAAKC,UACxB,kBAAChB,EAAD,KAAkBnT,EAAMP,iBACxB,kBAAC0T,EAAD,KACGnT,EAAMF,UAAU8R,SAAS6C,gBAE5B,kBAACtB,EAAD,KAAkBnT,EAAMA,OACxB,kBAACmT,EAAD,KAAkBnT,EAAMC,OAAOC,OAC/B,kBAACiT,EAAD,KACE,kBAAC,IAAD,CACExW,UAAU,+BACVF,GAAI,aAAeuD,EAAM7C,GACzBmS,MAAM,aAHR,QAOA,6BACA,6BACA,6BACA,4BACE3S,UAAU,+BACVR,KAAK,SACL2B,KAAK,UAHP,SAME,uBAAGnB,UAAU,wBAAb,gCAvE1B,GAA8BW,IAAMC,WAgGrBoP,gBACbnR,aAbsB,SAACC,GACvB,MAAO,CACLwB,IAAKxB,EAAMG,SAASD,KAAKsB,IACzB2S,SAAUnU,EAAM2D,UAAUyQ,QAAQD,SAClC4B,cAAe/V,EAAM2D,UAAUyQ,QAAQ2B,cACvCyB,MAAOxX,EAAM2D,UAAUyQ,QAAQoD,MAC/BtX,KAAMF,EAAMG,SAASD,KACrBuX,OAAQzX,EAAM2D,UAAUyQ,QAAQqD,OAChCrX,QAASJ,EAAMG,SAASC,YAM1B6Y,6BAAiB,SAACtY,GAChB,MAA2B,UAAvBA,EAAMP,QAAQQ,KACT,CACL,CACEkD,WAAY,WAGX,CACL,CACEA,WAAY,SACZsV,MAAO,CAAC,SAAU,KAAMzY,EAAMa,UAZvB0P,CAgBbsM,IClEaC,OAxCf,WAAgB,IAAD,EACK7Y,oBAAS,GAApBtC,EADM,oBAGb,OACE,kBAAC,IAAD,KACE,yBAAKpB,UAAWoB,EAAU,WAAa,cACrC,yBAAKpB,UAAU,OACb,gCAEE,yBAAKA,UAAU,qBAAqBkB,MAAO,CAAEsb,WAAY,SACvD,kBAACtB,GAAD,OAGF,yBAAKlb,UAAU,wBACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyc,KAAK,aAAa9V,UAAWoJ,KACpC,kBAAC,IAAD,CAAO0M,KAAK,YAAY9V,UAAWwR,KACnC,kBAAC,IAAD,CAAOsE,KAAK,iBAAiB9V,UAAW0S,KACxC,kBAAC,IAAD,CAAOoD,KAAK,UAAU9V,UAAWsJ,KACjC,kBAAC,IAAD,CAAOwM,KAAK,UAAU9V,UAAWkL,KACjC,kBAAC,IAAD,CAAO4K,KAAK,iBAAiB9V,UAAW+L,KACxC,kBAAC,IAAD,CAAO+J,KAAK,aAAa9V,UAAWwC,KACpC,kBAAC,IAAD,CAAOsT,KAAK,WAAW9V,UAAWyM,KAClC,kBAAC,IAAD,CAAOqJ,KAAK,iBAAiB9V,UAAWoK,KACxC,kBAAC,IAAD,CAAO0L,KAAK,eAAe9V,UAAW0M,KACtC,kBAAC,IAAD,CAAOoJ,KAAK,YAAY9V,UAAW+V,KACnC,kBAAC,IAAD,CAAOD,KAAK,cAAc9V,UAAWyO,KACrC,kBAAC,IAAD,CAAOqH,KAAK,YAAY9V,UAAW2V,KACnC,kBAAC,IAAD,CAAOG,KAAK,IAAI9V,UAAWoJ,OAG/B,kBAAC,GAAD,UCzCU4M,QACW,cAA7BlL,OAAOmL,SAASC,UAEe,UAA7BpL,OAAOmL,SAASC,UAEhBpL,OAAOmL,SAASC,SAASvE,MACvB,2DClBN,IAAMwE,GAAY,CACdvM,UAAW,MAuCAwM,GApCK,WAAgC,IAA/Bje,EAA8B,uDAAtBge,GAAWE,EAAW,uCAC/C,OAAQA,EAAOxd,MACX,IAAK,cAED,OADAG,QAAQC,IAAI,eACL,2BACAd,GADP,IAEIyR,UAAW,iBAEnB,IAAK,gBAED,OADA5Q,QAAQC,IAAI,iBACL,2BACAd,GADP,IAEIyR,UAAW,OAEnB,IAAK,kBAED,OADA5Q,QAAQC,IAAI,mBACL,eACAd,GAEX,IAAK,iBAED,OADAa,QAAQC,IAAI,kBACL,2BACAd,GADP,IAEIyR,UAAU,OAEd,IAAK,eAED,OADA5Q,QAAQC,IAAI,gBACL,2BACAd,GADP,IAEIyR,UAAUyM,EAAOvZ,IAAI6P,UAEjC,QACI,OAAOxU,ICpCbge,GAAY,GAkBHG,GAhBQ,WAAgC,IAA/Bne,EAA8B,uDAAtBge,GAAWE,EAAW,uCACpD,OAAQA,EAAOxd,MACb,IAAK,iBAEH,OADAG,QAAQC,IAAI,kBAAmBod,EAAOhK,SAC/BlU,EACT,IAAK,uBAEH,OADAa,QAAQC,IAAI,wBAAyBod,EAAOvZ,KACrC3E,EACT,IAAK,iBAEH,OADAa,QAAQC,IAAI,gBACLd,EACT,QACE,OAAOA,ICdPge,GAAY,GAeHI,GAbM,WAAgC,IAA/Bpe,EAA8B,uDAAtBge,GAAWE,EAAW,uCAClD,OAAQA,EAAOxd,MACb,IAAK,cAEH,OADAG,QAAQC,IAAI,gBAAiBod,EAAOxa,eAC7B1D,EACT,IAAK,oBAEH,OADAa,QAAQC,IAAI,wBAAyBod,EAAOvZ,KACrC3E,EACT,QACE,OAAOA,ICKEqe,GAREC,aAAgB,CAC/Bpe,KAAM+d,GACN1Z,MAAO6Z,GACPlK,QAASiK,GACTxa,UAAW4a,oBACXpe,SAAUqe,qB,+BCENC,GAD4BC,aAAgBC,KAAhBD,CAA8BE,KAClDC,CACbR,GACAnN,aACCwN,aACCI,KAAMC,kBAAkB,CACvBve,2BACAoD,gCAGFob,0BAAe7e,KACf8e,8BAAmB9e,IAAS,CAAC+e,wBAAuB,EAAMC,YAAY,QAASC,mBAAmB,MAIpGX,GAAMY,oBAAoB5e,MAAK,WAC3B6e,IAASC,OAAO,kBAAC,IAAD,CAAUd,MAAOA,IAAO,kBAAC,GAAD,OAAoBjW,SAASgX,eAAe,SLmGlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlf,MAAK,SAAAmf,GACjCA,EAAaC,oB,m3/sBMnInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.65812c21.chunk.js","sourcesContent":["export const Role = {\r\n    Admin: 'Admin',\r\n    Subscribed: 'Subscribed',\r\n    User: 'User'    \r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props, profile) => {\r\n  if (props.profile.role === \"Admin\") {\r\n    console.log(\"User role\", profile.role);\r\n    return (\r\n      <React.Fragment>\r\n        <li>\r\n          <NavLink to=\"/MyOrders\">MyOrders</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/AdminPanel\">AdminPanel</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Profile\" className=\"btn btn-floating grey\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <li>\r\n          <NavLink to=\"/MyOrders\">MyOrders</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Profile\" className=\"btn btn-floating grey\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import { Role } from \"./Role\";\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendPasswordResetEmail = (emailAddress) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(emailAddress)\r\n      .then(() => {\r\n        dispatch({ type: \"PASSWORD_RESET_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"PASSWORD_RESET_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendEmailVerification = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .newUser.sendEmailVerification()\r\n      .then(() => {\r\n        dispatch({ type: \"sendEmailVerification\" });\r\n      });\r\n  };\r\n};\r\nexport const sendMessage = (message) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // TODO: Set types and bindActionCreators\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"messages\")\r\n      .add({\r\n        ...message,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"send_message\", message });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"send_message_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\n//Save the map coordinated to the filestore\r\nexport const saveData = (cordinates) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"cordinates\")\r\n      .add({\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n        ...cordinates,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"save_cordinates\", cordinates });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"save_cordinates_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\n//Save New Users to the firestore\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    // firebase.auth().newUser.sendEmailVerification();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            userId: resp.user.uid,\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n            email: newUser.email,\r\n            telephone: newUser.telephone,\r\n            city: newUser.city,\r\n            role: Role.User,\r\n            imageurl: newUser.imageurl,\r\n            createdDate: new Date(),\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\n//Moved to newOrder.js\r\n\r\n// //Save Orders Data to the firestore\r\n// export const saveOrderData = (orders) =>{\r\n//   return(dispatch, getState, { getFirebase, getFirestore }) =>{\r\n//       const firestore = getFirestore();\r\n//       const profile = getState().firebase.profile;\r\n//       const authorId = getState().firebase.auth.uid;\r\n//       firestore.collection('orders').add({\r\n//         authorFirstName: profile.firstName,\r\n//         authorLastName: profile.lastName,\r\n//         authorId: authorId,\r\n//         createdAt: new Date(),\r\n//         ...orders\r\n//       }).then(() =>{\r\n//         dispatch({type:'save_orders', orders})\r\n//       }).catch((err)=>{\r\n//         dispatch({type:'save_orders_ERROR', err})\r\n//       })\r\n//     }\r\n// }\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n \r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <li><NavLink to='/signup'>SignUp</NavLink></li> */}\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nexport class Navbar extends React.Component {\r\n  render() {\r\n    const { profile, auth } = this.props;\r\n    const links = auth.uid ? (\r\n      <SignedInLinks profile={profile} />\r\n    ) : (\r\n      <SignedOutLinks />\r\n    );\r\n    return (\r\n      <nav className=\"z-depth-0\">\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"container\">\r\n            <Link to=\"/\" className=\"brand-logo\">\r\n              <img alt=\"logo\" id=\"sv_logo\" src={require(\"./logo.png\")} />\r\n            </Link>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n              {links}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange, newColor }) => (\r\n    <p>\r\n      <label style={newColor}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={label}\r\n          checked={isSelected}\r\n          onChange={onCheckboxChange}\r\n          className=\"form-check-input\"          \r\n        />\r\n        <span>{label}</span>\r\n      </label>\r\n    </p>\r\n\r\n);\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SimpleAlerts({errorStatus}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    errorStatus !== null && (\r\n    <div className={classes.root}>\r\n      <Alert variant=\"outlined\" severity=\"warning\">\r\n        You must select at least one Crop type\r\n      </Alert>\r\n    </div>\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import FormGroup from \"@material-ui/core/FormGroup\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { connect } from \"react-redux\";\r\nimport { saveOrderData } from \"../../store/actions/newOrder\";\r\nimport Checkbox from \"./checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n//step names\r\nfunction getSteps() {\r\n  return [\r\n    \"View block and satelite image\",\r\n    \"Choose rate and draw\",\r\n    \"Choose your preferred crops\",\r\n    \"Confirm your selected crops\",\r\n  ];\r\n}\r\n\r\nfunction HorizontalLinearStepper(props) {\r\n  const classes = useStyles();\r\n  const [errorStatus, setErrorStatus] = React.useState(null);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n  const OPTIONS = [\r\n    \"Fruits: Apples, Pears, Plums, Peaches, Cherries\",\r\n    \"Vegetables: Tomatoes, Peppers, Cabbage\",\r\n    \"Protein: Soy, Quinoa, Peanuts\",\r\n    \"Grains: Wheat, Corn, Sunflower\",\r\n    \"Vines: Desert\",\r\n    \"Beries: Raspberries, Blackberries, Blueberries, Strawberries\",\r\n  ];\r\n  const [state, setState] = React.useState({\r\n    checkboxes: OPTIONS.reduce(\r\n      (options, option) => ({\r\n        ...options,\r\n        [option]: false,\r\n      }),\r\n      {}\r\n    ),\r\n  });\r\n\r\n  //Checkboxes\r\n  const newColorConfirm = {\r\n    color: \"black\",\r\n  };\r\n  const createCheckbox = (option) => (\r\n    <Checkbox\r\n      label={option}\r\n      isSelected={state.checkboxes[option]}\r\n      onCheckboxChange={handleCheckboxChange}\r\n      key={option}\r\n      newColor={newColorConfirm}\r\n    />\r\n  );\r\n  const createCheckbox1 = (option) => (\r\n    <Checkbox\r\n      label={option}\r\n      isSelected={state.checkboxes[option]}\r\n      onCheckboxChange={() => {}}\r\n      key={option}\r\n    />\r\n  );\r\n\r\n  const handleCheckboxChange = (changeEvent) => {\r\n    const { name } = changeEvent.target;\r\n\r\n    setState((prevState) => ({\r\n      checkboxes: {\r\n        ...prevState.checkboxes,\r\n        [name]: !prevState.checkboxes[name],\r\n      },\r\n    }));\r\n  };\r\n\r\n  const createCheckboxes = () => OPTIONS.map(createCheckbox);\r\n  const createCheckboxes1 = () => OPTIONS.map(createCheckbox1);\r\n  // const GetSelectedCrops = () => {\r\n  //   const crops = state;\r\n  //   console.log(crops);\r\n  //   return <div>{JSON.stringify(crops)}</div>;\r\n  // };\r\n\r\n  const handleFormSubmit = (formSubmitEvent) => {\r\n    formSubmitEvent.preventDefault();\r\n    const selectedBoxes = Object.keys(state.checkboxes).filter(\r\n      (checkbox) => state.checkboxes[checkbox]\r\n    );\r\n    //SEND TO FIREBASE\r\n    props.saveOrderData(selectedBoxes);\r\n\r\n    console.log(\"Database updated!\");\r\n  };\r\n  //   setState({ ...state, [event.target.name]: event.target.checked });\r\n  //   // GetSelectedCrops()\r\n  // };\r\n  //CHECKBOXES\r\n  // function FoodCheckbox() {\r\n  //   return (\r\n  //     <FormGroup row>\r\n  //       <FormControlLabel\r\n  //         control={\r\n  //           <Checkbox\r\n  //             checked={state.checkedA}\r\n  //             onChange={handleChange}\r\n  //             name=\"checkedA\"\r\n  //           />\r\n  //         }\r\n  //         label=\"Secondary\"\r\n  //       />\r\n  //       <FormControlLabel\r\n  //         control={\r\n  //           <Checkbox\r\n  //             checked={state.checkedB}\r\n  //             onChange={handleChange}\r\n  //             name=\"checkedB\"\r\n  //             color=\"primary\"\r\n  //           />\r\n  //         }\r\n  //         label=\"Primary\"\r\n  //       />\r\n  //     </FormGroup>\r\n  //   );\r\n  // }\r\n  //CHECKBOXES\r\n\r\n  //STEPPER FUNCTIONALITY***************\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n  const handleNext = () => {\r\n    //get boxes\r\n    const selectedBoxes = Object.keys(state.checkboxes).filter(\r\n      (checkbox) => state.checkboxes[checkbox]\r\n    );\r\n    console.log(\"Count of boxes: \", selectedBoxes.length);\r\n    if (activeStep === 2 && selectedBoxes.length < 1) {\r\n      console.log(\"You must select at least one Crop type\");\r\n      setErrorStatus({ msg: \"Must Select one crop\", type: \"Warning\" });\r\n    } else {\r\n      let newSkipped = skipped;\r\n      if (isStepSkipped(activeStep)) {\r\n        newSkipped = new Set(newSkipped.values());\r\n        newSkipped.delete(activeStep);\r\n      }\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setSkipped(newSkipped);\r\n    }\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  //SAVE TO FIREBASE\r\n  const Save = () => {\r\n    const selectedBoxes = Object.keys(state.checkboxes).filter(\r\n      (checkbox) => state.checkboxes[checkbox]\r\n    );\r\n    props.saveOrderData(selectedBoxes);\r\n    console.log(\"Database updated, Moving to next step\");\r\n    handleReset1();\r\n    handleNext();\r\n  };\r\n  const handleReset1 = () => {\r\n    setState({\r\n      checkboxes: OPTIONS.reduce(\r\n        (options, option) => ({\r\n          ...options,\r\n          [option]: false,\r\n        }),\r\n        {}\r\n      ),\r\n    });\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  //STEPPER FUNCTIONALITY***************\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <h3>Map your crop from satellite</h3>\r\n            <p>\r\n              Use satellite imagery to visualise the crop variation within your\r\n              fields. Furthermore, you can easily create variation maps and\r\n              prescription files to control the application rate of your\r\n              fertilizer spreader or sprayer. Zoom into your field by using the\r\n              search box to find your location! The background map is there to\r\n              help you find your field and has nothing to do with current\r\n              satellite imagery.\r\n            </p>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <ol>\r\n            <h3>Find your block and chose satellite image</h3>\r\n            <li>\r\n              Find the parcel you would like to have a closer look at. Enter the\r\n              location in the search field at the top left. You can also zoom in\r\n              and out by using the + and - buttons and navigate by dragging the\r\n              map to where you want to go.\r\n            </li>\r\n            <li>Draw one or more parcels in the background map</li>\r\n            <li>When you have selected parcels, click on Save</li>\r\n          </ol>\r\n        );\r\n      case 2:\r\n        return (\r\n          // TODO: Make the checkboxes in 2 columns aka div \"row\" div \"col s6\" currently not working\r\n          <div>\r\n            <Alert errorStatus={errorStatus} />\r\n            <form onSubmit={handleFormSubmit}>{createCheckboxes()}</form>\r\n          </div>\r\n        );\r\n      //TODO Validation if all boxes are false. At least one needs to be selecected\r\n      case 3:\r\n        return <form onSubmit={handleFormSubmit}>{createCheckboxes1()}</form>;\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  }\r\n  const mapEvent = (e) => {\r\n    var ee = document.createEvent(\"Event\");\r\n    ee.initEvent(\"click\", true, true);\r\n    var cb = document.getElementsByClassName(\"leaflet-draw-draw-polygon\");\r\n    return !cb[0].dispatchEvent(ee);\r\n  };\r\n  //STEPPER FUNCTIONALITY***************\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = (\r\n              <Typography component=\"span\" variant=\"caption\">\r\n                Optional\r\n              </Typography>\r\n            );\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography component=\"span\" className={classes.instructions}>\r\n              Your order was completed. <br />\r\n              You may track its process on \"My orders\" page.\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              onClick={handleReset}\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n            >\r\n              New Order\r\n            </Button>\r\n            <Button\r\n              // onClick={}\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {/* TODO Link TO MY ORDERS PAGE */}\r\n              <Link style={{ color: \"white\" }} to=\"/MyOrders\">\r\n                My Orders\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography component=\"span\" className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                style={{\r\n                  ...(activeStep === 0 ? { display: \"none\" } : {}),\r\n                }}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={(e) => {\r\n                    mapEvent(e);\r\n                  }}\r\n                  className={classes.button}\r\n                >\r\n                  Draw a polygon\r\n                </Button>\r\n              )}\r\n              <Button\r\n                style={{\r\n                  ...(activeStep === 0 ? { display: \"none\" } : {}),\r\n                  ...(activeStep === 1 ? { display: \"none\" } : {}),\r\n                  ...(activeStep === 2 ? { display: \"none\" } : {}),\r\n                  ...(activeStep === 4 ? { display: \"none\" } : {}),\r\n                }}\r\n                disabled={activeStep === 0}\r\n                onClick={Save}\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Review and Submit\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n                style={{\r\n                  ...(activeStep === 3 ? { display: \"none\" } : {}),\r\n                }}\r\n              >\r\n                {activeStep === steps.length - 1\r\n                  ? // ? \"Finish\"\r\n                    // : activeStep\r\n                    // === 0\r\n                    \"Start\"\r\n                  : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveOrderData: (selectedBoxes) => dispatch(saveOrderData(selectedBoxes)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HorizontalLinearStepper);\r\n","//Save Orders Data to the firestore\r\nexport const saveOrderData = (selectedBoxes) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"orders\")\r\n      .add({\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        userId: authorId,\r\n        createdAt: new Date(),\r\n        order: selectedBoxes,\r\n        status: [{ value: \"Submitted\", label: \"Submitted\" }],\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"save_orders\", selectedBoxes });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"save_orders_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteOrder = (selectedBoxes) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // TODO: Set types and bindActionCreators\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"orders\")\r\n      .doc(selectedBoxes)\r\n      .delete()\r\n      .then(() => {\r\n        dispatch({ type: \"DELETE_ORDER\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"DELETE_ORDER_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nclass Basemap extends React.Component {\r\n  onChange = (e) => {\r\n    var bm = e.currentTarget.value;\r\n\r\n    if (this.props.onChange) {\r\n      this.props.onChange(bm);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"basemaps-container\">\r\n        <select value={this.props.basemap} onChange={this.onChange}>\r\n          <option value=\"osm\">OSM</option>\r\n          <option value=\"hot\">OSM HOT</option>\r\n          <option value=\"dark\">DARK</option>\r\n          <option value=\"cycle\">CYCLE MAP</option>\r\n          <option value=\"sentinel\">Sentinel Test Data </option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basemap;\r\n","\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database';\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCaIrtat0fd8si1o80cA9W2RIL6bn77YpI',\r\n  authDomain: 'robust-solution-221513.firebaseapp.com',\r\n  databaseURL: 'https://robust-solution-221513.firebaseio.com',\r\n  projectId: 'robust-solution-221513',\r\n  storageBucket: 'gs://robust-solution-221513.appspot.com',\r\n  messagingSenderId: '8658609726',\r\n  appId: '1:8658609726:web:70e9e4e7190b615aa3136f',\r\n  measurementId: 'G-KZCRXQYB7Y'\r\n};\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({});\r\n\r\n  const storage = firebase.storage()\r\n  const storageRef=storage.ref()\r\n firebase.database();\r\n  \r\n export  {\r\n  storageRef,storage, firebase as default\r\n}","import React, { createRef } from \"react\";\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  FeatureGroup,\r\n  Polygon,\r\n  GeoJSON,\r\n  Marker,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport london_postcodes from \"../Files/london_postcodes.json\";\r\nimport geojson from \"../Files/geojson.json\";\r\nimport points from \"../Files/points.json\";\r\nimport \"../../leaflet.filelayer\";\r\nimport { connect } from \"react-redux\";\r\nimport { saveData } from \"../../store/actions/authActions\";\r\nimport { saveAs } from \"file-saver\";\r\nimport HorizontalLinearStepper from \"../Wizard/HorizontalLinearStepper\";\r\nimport \"../dashboard/GeojsonLayer.css\";\r\nimport Search from \"react-leaflet-search\";\r\nimport Basemap from \"./Basemap\";\r\nimport \"./Map.css\";\r\nimport L from \"leaflet\";\r\nimport { storage } from \"../../firebase/index\";\r\nimport { format } from \"date-fns\";\r\n\r\nL.Icon.Default.imagePath = \"https://unpkg.com/leaflet@1.5.0/dist/images/\";\r\n// import JSZip from 'jszip'\r\n// import firebase from '../../firebase';\r\n// import {  getFirestore } from 'redux-firestore'\r\n// import sophia_postcodes from '../Files/rpu_sofia.geojson'\r\n\r\n//Hardcoded cordinates of polygons\r\nconst polygon = [\r\n  [42.696295, 23.303643],\r\n  [42.699295, 23.303643],\r\n  [42.699295, 23.313643],\r\n  [42.679295, 23.313643],\r\n];\r\n\r\nexport class Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      basemap: \"osm\",\r\n      downloadURLs: [],\r\n      cordinatesCenter: [42.696295, 23.303643],\r\n      zoom: 10,\r\n      showMarkers: false,\r\n      showPolygons: false,\r\n      geojsonvisible: false,\r\n    };\r\n  }\r\n  //Set location when the map is visualized\r\n\r\n  mapRef = createRef();\r\n\r\n  handleClick = () => {\r\n    const map = this.mapRef.current;\r\n    if (map != null) {\r\n      map.leafletElement.locate();\r\n    }\r\n    console.log(\"CatchMouseClick\", Polygon.latlng);\r\n  };\r\n\r\n  onCreate = (e) => {\r\n    var layer = e.layer;\r\n    console.log(\"Polygon Cordinates\", layer.getLatLngs());\r\n    console.log(\"Log_Create_Shape: \", e);\r\n\r\n    var drawedCord = layer.toGeoJSON().geometry.coordinates;\r\n    for (const result of drawedCord) this.props.saveData(result);\r\n\r\n    console.log(\"shape1\", drawedCord);\r\n\r\n    var data = layer.toGeoJSON();\r\n    var tokml = require(\"tokml\");\r\n    var kml = tokml(data);\r\n    console.log(\"KMLLLLLLLL\", kml);\r\n    var kmlNameDescription = tokml(data, {\r\n      name: \"name\",\r\n      description: \"description\",\r\n    });\r\n    console.log(\"1111111111111111111111\", kmlNameDescription);\r\n    var convertedData = JSON.stringify(data);\r\n    console.log(convertedData);\r\n    var FileSaver = require(\"file-saver\");\r\n    var blob = new Blob([kmlNameDescription], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    FileSaver.saveAs(blob, \"cordinates.kml\");\r\n\r\n    var date = new Date();\r\n\r\n    var formattedDate = format(date, \"DD-MM-YYYY_H:mma\");\r\n\r\n    console.log(formattedDate);\r\n    const filename = formattedDate + \"_\" + this.props.profile.firstName;\r\n    console.log(filename);\r\n    storage.ref(`files/${filename}.kml`).put(blob);\r\n  };\r\n\r\n  saveToFile() {\r\n    var FileSaver = require(\"file-saver\");\r\n    var blob = new Blob([\"Greetings from SoilViews!\"], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    FileSaver.saveAs(blob, \"Greetings from SoilViews.txt\");\r\n  }\r\n\r\n  //for future upgrade\r\n  saveToFile1(content, filename) {\r\n    var file = filename + \".geojson\";\r\n    saveAs(\r\n      new File([JSON.stringify(content)], file, {\r\n        type: \"text/plain;charset=utf-8\",\r\n      }),\r\n      file\r\n    );\r\n  }\r\n\r\n  onGeojsonPolygons = (e) => {\r\n    this.setState({\r\n      showPolygons: e.currentTarget.checked,\r\n    });\r\n  };\r\n\r\n  onGeojsonMarkers = (e) => {\r\n    this.setState({\r\n      showMarkers: e.currentTarget.checked,\r\n    });\r\n  };\r\n\r\n  onGeojsonToggleButton = (e) => {\r\n    this.setState({\r\n      geojsonvisible: e.currentTarget.click,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n  onBMChange = (bm) => {\r\n    // console.log(this);\r\n    this.setState({\r\n      basemap: bm,\r\n    });\r\n  };\r\n\r\n  //same for polygon\r\n  onEachFeaturePoint(feature, layer) {\r\n    console.log(\"feature: \", feature);\r\n    console.log(\"layer: \", layer);\r\n    var popupContent =\r\n      feature.properties.Name + \"  \" + feature.properties.Crops;\r\n    console.log(feature.properties.coordinates);\r\n    this.setState({\r\n      cordinatesCenter: feature.properties.coordinates,\r\n    });\r\n    layer.bindPopup(popupContent);\r\n    layer.on({\r\n      click: function (e) {\r\n        console.log(\"e: \", e);\r\n        console.log(\"click\");\r\n      },\r\n    });\r\n  }\r\n\r\n  pointToLayer(feature, latlng) {\r\n    return L.circleMarker(latlng, null); // Change marker to circle\r\n    // return L.marker(latlng, { icon: {}}); // Change the icon to a custom icon\r\n  }\r\n\r\n  onButtonClick = (coords) => {\r\n    // const map = this.mapRef.current;\r\n    // var group = new L.featureGroup([L.marker(coords)]);\r\n    // if (map) map.leafletElement.fitBounds(group.getBounds());\r\n    this.setState({\r\n      cordinatesCenter: coords,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const position = this.state.cordinatesCenter;\r\n    const { profile } = this.props;\r\n    if (profile.role === \"User\" || profile.role === \"Admin\") {\r\n      console.log(\"User role\", profile.role);\r\n      const basemapsDict = {\r\n        osm: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n        hot: \"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\",\r\n        dark: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@2x.png\",\r\n        cycle: \"https://dev.{s}.tile.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\",\r\n        sentinel:\r\n          \"http://services.sentinel-hub.com/ogc/wms/bb1c8a2f-5b11-42bb-8ce4-dbf7f5300663?REQUEST=GetMap&BBOX=3238005,5039853,3244050,5045897&LAYERS=TRUE_COLOR&MAXCC=20&WIDTH=320&HEIGHT=320&FORMAT=image/jpeg&TIME=2018-03-29/2018-05-29\",\r\n      };\r\n      return (\r\n        <div id=\"map\" className=\"dashboard container\">\r\n          <br />\r\n          <HorizontalLinearStepper />\r\n          <br />\r\n          <hr />\r\n          <Map\r\n            style={{ height: \"50vh\" }}\r\n            center={position}\r\n            zoom={13}\r\n            onClick={this.handleClick}\r\n            onCreate={this.onCreate}\r\n            onLocationfound={this.handleLocationFound}\r\n          >\r\n            <Search />\r\n\r\n            <div className=\"geojson-toggle\">\r\n              <label>Show Polygons </label>\r\n              <input\r\n                style={{ opacity: 1, pointerEvents: \"auto\" }}\r\n                type=\"checkbox\"\r\n                name=\"layertoggle\"\r\n                id=\"layertoggle\"\r\n                value={this.state.showPolygons}\r\n                onChange={this.onGeojsonPolygons}\r\n              />\r\n            </div>\r\n            {this.state.showPolygons && (\r\n              <GeoJSON\r\n                data={geojson}\r\n                style={this.geoJSONStyle}\r\n                value={this.state.showPolygons}\r\n              />\r\n            )}\r\n\r\n            <div className=\"geojson-toggle1\">\r\n              <label>Show Markers </label>\r\n              <input\r\n                style={{ opacity: 1, pointerEvents: \"auto\" }}\r\n                type=\"checkbox\"\r\n                name=\"layertoggle\"\r\n                id=\"layertoggle\"\r\n                value={this.state.showMarkers}\r\n                onChange={this.onGeojsonMarkers}\r\n              />\r\n            </div>\r\n            {this.state.showMarkers && (\r\n              <GeoJSON\r\n                data={points}\r\n                style={this.geoJSONStyle}\r\n                value={this.state.showMarkers}\r\n                onEachFeature={this.onEachFeaturePoint.bind(this)}\r\n              />\r\n            )}\r\n            {/* /////////////////////////////////////// */}\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url={basemapsDict[this.state.basemap]}\r\n              layers=\"NDVI\"\r\n              // baseUrl=\"https://services.sentinel-hub.com/ogc/wms/bb1c8a2f-5b11-42bb-8ce4-dbf7f5300663\"\r\n            />\r\n            <Marker position={position}>\r\n              <Popup>Тест</Popup>\r\n            </Marker>\r\n            {this.state.geojsonvisible && (\r\n              <GeoJSON\r\n                data={points}\r\n                onEachFeature={this.onEachFeaturePoint.bind(this)}\r\n                // pointToLayer={this.pointToLayer.bind(this)}\r\n              />\r\n            )}\r\n            <Basemap\r\n              style={{ select: \"yes\" }}\r\n              basemap={this.state.basemap}\r\n              onChange={this.onBMChange}\r\n            />\r\n            <FeatureGroup>\r\n              <EditControl\r\n                position=\"topleft\"\r\n                onEdited={this._onEditPath}\r\n                onCreated={this.onCreate}\r\n                onDeleted={this._onDeleted}\r\n                onMounted={this._mounted}\r\n                onEditStart={this._onEditStart}\r\n                onEditStop={this._onEditStop}\r\n                onDeleteStart={this._onDeleteStart}\r\n                onDeleteStop={this._onDeleteStop}\r\n                draw={{\r\n                  rectangle: false,\r\n                }}\r\n              />\r\n            </FeatureGroup>\r\n            <Polygon color=\"purple\" positions={polygon} />\r\n            <GeoJSON\r\n              data={london_postcodes}\r\n              style={this.geoJSONStyle}\r\n              onEachFeature={this.onEachFeature}\r\n            />\r\n          </Map>\r\n          <br />\r\n          <br />\r\n          <button\r\n            className=\"waves-effect waves-light btn\"\r\n            onClick={this.onGeojsonToggleButton}\r\n          >\r\n            Парцел 1 --> показва всички маркери от json файл\r\n          </button>\r\n          <br />\r\n          <button\r\n            className=\"waves-effect waves-light btn\"\r\n            onClick={() => this.onButtonClick([41.9425557, 26.41389781])}\r\n          >\r\n            Парцел 2--> сочи към конкретен маркер\r\n          </button>\r\n          <br />\r\n          <button\r\n            className=\"waves-effect waves-light btn\"\r\n            onClick={this.saveToFile}\r\n          >\r\n            Download file\r\n          </button>\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <h1 className=\"header center orange-text\">\r\n          You don't have access to this page,please make account to access the\r\n          page\r\n        </h1>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveData: (cordinates) => dispatch(saveData(cordinates)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class indexPage extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"section no-pad-bot\" id=\"index-banner\">\r\n        <div className=\"container\">\r\n         \r\n          <h1 className=\"header center orange-text\">Welcome to SoilViews Web App</h1>\r\n          <div className=\"row center\">\r\n            <p className=\"header col s12 light\">Get your soil analysis today</p>\r\n            <p className=\"header col s12 light\">Increase your predictability and crop yields</p> \r\n            <p className=\"header col s12 light\">Not magic: we combine soil samples and Copernicus satelite imaging</p>\r\n          </div>\r\n          {/* <div class=\"row center\">\r\n            <a href=\"https://soilviews.com/\" id=\"download-button\" class=\"btn-large waves-effect waves-light orange\">Get Started</a>\r\n          </div> */}\r\n\r\n          <div className=\"container\">\r\n            <div className=\"section\">\r\n              <div className=\"row center\">\r\n                <div className=\"col s12 m4\">\r\n                    <Link to='/Profile'><h5 className=\"center btn waves-effect waves-light\">My Profile</h5></Link>\r\n                    {/* <i class=\"material-icons\">account_circle</i> */}\r\n                </div>\r\n                <div className=\"col s12 m4\">\r\n                    <Link to='/Dashboard'><h5 className=\"center btn waves-effect waves-light\">New Project</h5></Link>\r\n                    {/* <i class=\"material-icons\">add_circle_outline</i> */}\r\n                </div>\r\n                <div className=\"col s12 m4\">\r\n                    <Link to='/HelpPage'><h5 className=\"center btn waves-effect waves-light\">Documentation</h5></Link>\r\n                    {/* <i class=\"material-icons\">help_outline</i> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose()(indexPage);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux' \r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom' \r\nimport { NavLink } from \"react-router-dom\";    \r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            email:'',\r\n            password:''\r\n        }\r\n \r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to=\"/Dashboard\"/>\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"title\">\r\n                <h3 className=\"center-align grey-text\">Welcome!</h3>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l4 offset-l4\">\r\n                    <div className=\"card grey lighten-3\">\r\n                        <div className=\"card-content\">\r\n                            <h4 className=\"card-title center-align\">Login</h4>\r\n                            <form onSubmit={this.onSubmitForm}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix\">email</i>\r\n                                        <input type=\"email\" placeholder='Email' id=\"email\" className=\"validate\" onChange={this.onChangeInput}/>\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix\">vpn_key</i>\r\n                                        <input type=\"password\" placeholder=\"Password\" id=\"password\" className=\"validate\" onChange={this.onChangeInput}/>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row center-align\">\r\n                                    <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Login <i className=\"material-icons right\">send</i> </button>\r\n                                    <div className=\"red-text center\">\r\n                                             {authError ? <p>{authError}</p>: null }\r\n                                    </div>\r\n                                </div>\r\n                                <span><NavLink to='/signup'>Register</NavLink></span>\r\n                                <span  style={{float: \"right\"}}><NavLink to='/ResetPassword'>Forgot password?</NavLink></span>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","  \r\nimport React from 'react'\r\n\r\nconst InputEmail = (props) => {\r\n  return (\r\n    <div className=\"input-field\" >\r\n      \r\n      <input  type=\"email\" placeholder='Email' id=\"email\" onChange={props.handleChange} />\r\n    </div>\r\n  )\r\n}\r\nexport default (InputEmail)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sendPasswordResetEmail } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport InputEmail from './InputEmail'\r\n\r\nclass ResetPassword extends Component {\r\n  state = {\r\n    email: '',\r\n    errors: []\r\n  }\r\n  errorClass = () => {\r\n    return (this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n}\r\n  validate = (email) => {\r\n    const errors = [];\r\n    if (email.length < 5) {\r\n        errors.push(\"Email should be at least 5 charcters long\");\r\n    }\r\n    if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\r\n        errors.push(\"Email should contain a @\");\r\n    }\r\n    if (email.indexOf(\".\") === -1) {\r\n        errors.push(\"Email should contain at least one dot\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    const {email } = this.state;\r\n    const errors = this.validate(email);\r\n    if (errors.length > 0) {\r\n        this.setState({ errors });\r\n        return;\r\n    }\r\n    // e.preventDefault();\r\n   \r\n        this.props.sendPasswordResetEmail(this.state.email);\r\n        window.alert(\"Email has been sent to you,Please check and verify.\");\r\n  \r\n    \r\n               \r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    const { errors } = this.state;\r\n    if (auth.uid) return <Redirect to='/profile' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <span>Please enter your email address below and we will send you information to recover your account</span>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">   \r\n            <h5 className=\"grey-text text-darken-3\">Password Reset</h5>\r\n               \r\n            <InputEmail handleChange={this.handleChange.bind(this)}/>\r\n            <span style={{ color: \"red\" }}>{this.state.errors[\"email\"]}</span>\r\n            <div className=\"input-field\">\r\n            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit <i className=\"material-icons right\">send</i> </button>\r\n                <div className=\"red-text center\">\r\n                  { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n                <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    sendPasswordResetEmail: (emailAddress) => dispatch(sendPasswordResetEmail(emailAddress)),\r\n  }\r\n}\r\nexport default connect (mapStateToProps, mapDispatchToProps)(ResetPassword)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      city: \"\",\r\n      telephone: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      imageurl: \"\",\r\n      errors: [],\r\n    };\r\n  }\r\n\r\n  errorClass = () => {\r\n    return this.state.errors.length === 0 ? \"\" : \"c-error c-validation\";\r\n  };\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      city,\r\n      telephone,\r\n    } = this.state;\r\n\r\n    const errors = this.validate(\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      city,\r\n      telephone\r\n    );\r\n\r\n    if (errors.length > 0) {\r\n      this.setState({ errors });\r\n      return;\r\n    }\r\n\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  validate = (firstName, lastName, email, password, city, telephone) => {\r\n    const errors = [];\r\n    if (firstName.length === 0) {\r\n      errors.push(\"First Name can't be empty\");\r\n    }\r\n    if (city.length === 0) {\r\n      errors.push(\"City can't be empty\");\r\n    }\r\n    if (telephone.length === 0) {\r\n      errors.push(\"Telephone number can't be empty\");\r\n    }\r\n\r\n    if (telephone.length < 10) {\r\n      errors.push(\"Telephone number should be at least 10 charcters long\");\r\n    }\r\n\r\n    if (lastName.length === 0) {\r\n      errors.push(\"Last Name can't be empty\");\r\n    }\r\n\r\n    if (email.length < 5) {\r\n      errors.push(\"Email should be at least 5 charcters long\");\r\n    }\r\n    if (email.split(\"\").filter((x) => x === \"@\").length !== 1) {\r\n      errors.push(\"Email should contain a @\");\r\n    }\r\n    if (email.indexOf(\".\") === -1) {\r\n      errors.push(\"Email should contain at least one dot\");\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      errors.push(\"Password should be at least 6 characters long\");\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    const { errors } = this.state;\r\n\r\n    if (auth.uid) return <Redirect to=\"/Dashboard\" />;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"title\">\r\n            <h3 className=\"center-align grey-text\">Register New User</h3>\r\n          </div>\r\n          <div className=\"col s12 l4 offset-l4\">\r\n            <div className=\"card grey lighten-3\">\r\n              <div className=\"card-content\">\r\n                <h4 className=\"card-title center-align\">Register</h4>\r\n                <form onSubmit={this.onSubmitForm} id=\"reg-form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                      <i className=\"material-icons prefix\">email</i>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        id=\"firstName\"\r\n                        className=\"validate\"\r\n                        onChange={this.onChangeInput}\r\n                      />\r\n\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"name\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                      <i className=\"material-icons prefix\">email</i>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        id=\"lastName\"\r\n                        className=\"validate\"\r\n                        onChange={this.onChangeInput}\r\n                      />\r\n\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"name\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                      <i className=\"material-icons prefix\">location_city</i>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"City\"\r\n                        id=\"city\"\r\n                        className=\"validate\"\r\n                        onChange={this.onChangeInput}\r\n                      />\r\n\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"city\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                      <i className=\"material-icons prefix\">phone</i>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"telephone\"\r\n                        id=\"telephone\"\r\n                        className=\"validate\"\r\n                        onChange={this.onChangeInput}\r\n                      />\r\n\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"telephone\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                      <i className=\"material-icons prefix\">email</i>\r\n                      <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        id=\"email\"\r\n                        className=\"validate\"\r\n                        onChange={this.onChangeInput}\r\n                      />\r\n\r\n                      <span style={{ color: \"red\" }}>\r\n                        {this.state.errors[\"email\"]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                      <i className=\"material-icons prefix\">vpn_key</i>\r\n                      <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        id=\"password\"\r\n                        className=\"validate\"\r\n                        onChange={this.onChangeInput}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row center-align\">\r\n                    <button\r\n                      className=\"btn waves-effect waves-light\"\r\n                      type=\"submit\"\r\n                      name=\"action\"\r\n                    >\r\n                      Register <i className=\"material-icons right\">send</i>{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className={`${this.errorClass()} error`}>\r\n                    {errors.map((error) => (\r\n                      <p key={error}>Error: {error}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <b>{authError ? <p>{authError}</p> : null}</b>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dipsatch) => {\r\n  return {\r\n    signUp: (newUser) => dipsatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createrProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            errors: [],\r\n        }\r\n    }\r\n\r\n    errorClass = () => {\r\n        return(this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n     }\r\n\r\n     onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { title, content } = this.state;\r\n\r\n        const errors = this.validate(title, content);\r\n        if (errors.length > 0) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        this.props.createrProject(this.state);\r\n        this.props.history.push('/Dashboard')\r\n    }\r\n\r\n    validate = (title, content) => {\r\n        const errors = [];\r\n        if (title.length === 0) {\r\n            errors.push(\"Title can't be empty\");\r\n        }\r\n\r\n        if (content.length < 5) {\r\n            errors.push(\"Content should be at least 15 charcters long\");\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        const { errors } = this.state;\r\n\r\n        if (!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"title\">\r\n                <h1 class=\"header center orange-text\">New Project</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l10 offset-l1\">\r\n                        <div className=\"card grey lighten-3\">\r\n                            <div className=\"card-content\">\r\n                                <form onSubmit={this.onSubmitForm}>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input type=\"text\" placeholder='Title' id=\"title\" onChange={this.onChangeInput} />\r\n                                            {/* <label htmlFor=\"title\">Title</label> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <textarea id=\"content\" placeholder='Content' className=\"materialize-textarea\" onChange={this.onChangeInput}></textarea>\r\n                                            {/* <label htmlFor=\"content\">Content</label> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    {/* ********** ********** File upload ******************** */}\r\n                                 <div class=\"file-field input-field\">\r\n                                        <div>\r\n                                            <input type=\"file\" multiple></input>\r\n                                        </div>\r\n                                        <div class=\"file-path-wrapper\">\r\n                                            <input className=\"file-path validate\" type=\"text\" placeholder=\"Choose or Drop a file here\"></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Link to='/Dashboard'> <h5>Map your land manually</h5> </Link>\r\n                                    {/* ********** ********** File upload ******************** */}\r\n                                    <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"row center-align\">\r\n                                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create <i className=\"material-icons right\">send</i> </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createrProject: (project) => dispatch(createrProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createrProject = (project) =>{\r\n    return(dispatch, getState, { getFirebase, getFirestore }) =>{\r\n        // TODO: Set types and bindActionCreators\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n          ...project,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorId: authorId,\r\n          createdAt: new Date()\r\n        }).then(() =>{\r\n          dispatch({type:'CREATE_PROJECT', project})\r\n        }).catch((err)=>{\r\n          dispatch({type:'CREATE_PROJECT_ERROR', err})\r\n        })\r\n      }\r\n}\r\n\r\nexport const deleteProject = (project) =>{\r\n  return(dispatch, getState, { getFirebase, getFirestore }) =>{\r\n      // TODO: Set types and bindActionCreators\r\n      const firestore = getFirestore();\r\n      firestore.collection('projects').doc(project).delete().then(() =>{\r\n        dispatch({type:'DELETE_PROJECT'})\r\n      }).catch((err)=>{\r\n        dispatch({type:'CREATE_PROJECT_ERROR', err})\r\n      })\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <footer className=\"page-footer orange\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col l6 s12\">\r\n              <h5 className=\"white-text\">About SoilViews Web App</h5>\r\n              <p className=\"grey-text text-lighten-4\">\r\n                We deliver soil analysis combining Satelite imaging and soil\r\n                samples.\r\n                <Link to=\"/AboutUs\" className=\"white-text\" href=\"#!\">\r\n                  (Read more)\r\n                </Link>\r\n                {/* SoilViews Web App gives you analylisis on what crops could grow best on any specific land. Based on quality hyperspectral saatelite imaging and close work with soil specialists we deliver insights that would help you increase your crop yeilds. */}\r\n              </p>\r\n            </div>\r\n            <div className=\"col l3 s12\">\r\n              <h5 className=\"white-text\">Settings</h5>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/ContactForm\" className=\"white-text\" href=\"#!\">\r\n                    Contact Us\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/Dashboard\" className=\"white-text\" href=\"#!\">\r\n                    Dashboard\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col l3 s12\">\r\n              <h5 className=\"white-text\">Connect</h5>\r\n              <ul>\r\n                <li>\r\n                  <NavLink to=\"/SignIn\" className=\"white-text\" href=\"#!\">\r\n                    SignIn\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/SignUp\" className=\"white-text\" href=\"#!\">\r\n                    SignUp\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-copyright\">\r\n          <div className=\"container\">\r\n            Created by <a href=\"https://soilviews.com/\"> SoilViews </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Profile extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"card-action\">\r\n          <h1 className=\"header center orange-text\">My Profile</h1>\r\n          <hr />\r\n          <img\r\n            src={\r\n              this.props.profile.imageurl ||\r\n              \"https://via.placeholder.com/400x300\"\r\n            }\r\n            alt=\"Uploaded Images\"\r\n            height=\"300\"\r\n            width=\"400\"\r\n          />\r\n          <p>\r\n            {\" \"}\r\n            <span>Username: </span>\r\n            {this.props.profile.firstName}{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <span>Last Name: </span>\r\n            {this.props.profile.lastName}{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <span>Email: </span>\r\n            {this.props.profile.email}{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <span>City: </span>\r\n            {this.props.profile.city}{\" \"}\r\n          </p>\r\n          <p>\r\n            {\" \"}\r\n            <span>Telephone number: </span>\r\n            {this.props.profile.telephone}{\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { sendMessage } from '../../store/actions/authActions'\r\nclass ContactForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email:'',\r\n            message:'',\r\n            errors: []\r\n        }\r\n\r\n    }\r\n\r\n    validate = (name, email, message) => {\r\n        const errors = [];\r\n        if (name.length === 0) {\r\n            errors.push(\"First Name can't be empty\");\r\n        }\r\n        if (email.length < 5) {\r\n            errors.push(\"Email should be at least 5 charcters long\");\r\n        }\r\n        if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\r\n            errors.push(\"Email should contain a @\");\r\n        }\r\n        if (email.indexOf(\".\") === -1) {\r\n            errors.push(\"Email should contain at least one dot\");\r\n        }\r\n        if (message.length === 0) {\r\n            errors.push(\"Message can't be empty\");\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    errorClass = () => {\r\n        return (this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n    }\r\n    \r\n    onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { name,email,message } = this.state;\r\n\r\n        const errors = this.validate(name,email,message);\r\n        // const { firstName, email,message } = this.state;\r\n\r\n        if (errors.length > 0) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        this.props.sendMessage(this.state);\r\n        this.props.history.push('/')\r\n        window.alert(\"Thank you for your message, we'll get in touch soon.\");\r\n    }\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  \r\n  render() {\r\n    \r\n    const { errors } = this.state;\r\n   return(\r\n    <React.Fragment>\r\n                <div className=\"title\">\r\n                    <h3 className=\"center-align grey-text\">Contact Form</h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l10 offset-l1\">\r\n                        <div className=\"card grey lighten-3\">\r\n                            <div className=\"card-content\">\r\n                                <form onSubmit={this.onSubmitForm}>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input type=\"text\" placeholder='name' id=\"name\" onChange={this.onChangeInput} />\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input type=\"text\" placeholder='email' id=\"email\" onChange={this.onChangeInput} />\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <textarea id=\"message\" placeholder='message' onChange={this.onChangeInput}></textarea>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"row center-align\">\r\n                                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">submit <i className=\"material-icons right\">send</i> </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n   );\r\n  }\r\n  \r\n    \r\n  }\r\n  \r\n  const mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => dispatch(sendMessage(message))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nexport default function MaterialTableDemo() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Surname', field: 'surname' },\r\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n      {\r\n        title: 'Birth Place',\r\n        field: 'birthCity',\r\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n      },\r\n    ],\r\n    data: [\r\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n      {\r\n        name: 'Zerya Betül',\r\n        surname: 'Baran',\r\n        birthYear: 2017,\r\n        birthCity: 34,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { compose } from \"redux\";\r\n// import CheckboxContainer from \"../Checkboxes/CheckboxContainer\";\r\nimport SimpleAlert from \"../Wizard/Alert\"\r\n// import SimpleTable from \"./TableTest\"\r\nimport MaterialTableDemo from \"./MaterialTable\"\r\n\r\nexport const GrandParent = () => {\r\n  const [name, setName] = useState(\"i'm Grand Parent\");\r\n  return (\r\n    <>\r\n      <div>{name}</div>\r\n      <Parent setName={setName} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Parent = params => {\r\n  return (\r\n    <>\r\n      <button onClick={() => SimpleAlert()}>\r\n        from Parent\r\n      </button>\r\n      <Child setName={params.setName} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = params => {\r\n  return (\r\n    <>\r\n      <button onClick={() => params.setName(\"i'm from Child\")}>\r\n        from Child\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nclass HelpPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div class=\"section no-pad-bot\" id=\"index-banner\">\r\n        <div class=\"container\">\r\n          {/* <h1 class=\"header center orange-text\">Help Page</h1> */}\r\n          <div class=\"row\">\r\n            <MaterialTableDemo />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default compose()(HelpPage);\r\n","import React from 'react'\nimport moment from 'moment'\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"notifications-list\">\n            <div className=\"card-content\">\n                <h2 className=\"card-title\">Notifications</h2>\n                <ul>\n                    {notifications && notifications.map(item => {\n                        return (\n                            <li key={item.id}>\n                                <span className=\"item-user\">{item.user} - </span>\n                                <span className=\"item-content\">{item.content}</span>\n                                <span className=\"item-date\">{moment(item.time.toDate()).fromNow()}</span>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import UsersList from \"./UsersList\";\r\n// import OrdersList from \"./OrdersList\";\r\nimport Notifications from \"./Notifications\";\r\nimport { getFirestore } from \"redux-firestore\";\r\nimport { storageRef } from \"../../firebase/index\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nconst urls = [];\r\nexport class AdminPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      UserData: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { UserData } = this.state;\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((doc) => {\r\n          // console.log( \"User\",doc.data());\r\n          UserData.push(doc.data());\r\n        });\r\n        // UserData.map((user) => { return (console.log(user.city));});\r\n        console.log(\"User:\", UserData);\r\n      });\r\n    storageRef\r\n      .child(\"UploadedFiles/\")\r\n      .listAll()\r\n      .then(function (res) {\r\n        res.items.forEach(function (folderRef) {\r\n          folderRef.getDownloadURL().then(function (url) {\r\n            console.log(\"Got download URL\", url);\r\n            urls.push(url);\r\n          });\r\n          console.log(\"folderRef\", folderRef.toString());\r\n          var blob = null;\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open(\"GET\", \"downloadURL\");\r\n          xhr.responseType = \"blob\";\r\n          xhr.onload = function () {\r\n            blob = xhr.response; //xhr.response is now a blob object\r\n            console.log(\"BLOB\", blob);\r\n\r\n            // var path = storageRef.child('UploadedFiles/').getDownloadURL(folderRef);\r\n            // var zip = new JSZip();\r\n            // zip.file(path,blob);\r\n          };\r\n\r\n          xhr.send();\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users, notifications, auth, orders } = this.props;\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n      head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    }))(TableCell);\r\n\r\n    const StyledTableRow = withStyles((theme) => ({\r\n      root: {\r\n        \"&:nth-of-type(odd)\": {\r\n          backgroundColor: theme.palette.background.default,\r\n        },\r\n      },\r\n    }))(TableRow);\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signIn\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8\">\r\n            <h2>Notifications:</h2>\r\n            <hr />\r\n          </div>\r\n          <div className=\"col s12 m8\">\r\n            <Notifications notifications={notifications}></Notifications>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s12 m3 offset-m1\">\r\n          <h2>File storage urls:</h2>\r\n          <hr />\r\n        </div>\r\n        <div className=\"col s12 m3 offset-m1\">\r\n          <table>\r\n            <tbody>\r\n              {urls.map((user) => {\r\n                return (\r\n                  <tr key={Math.random()}>\r\n                    <td>\r\n                      <a href={user} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <Button>\r\n                          <i className=\"fas fa-download\" />\r\n                          {user}\r\n                        </Button>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col s12 m3 offset-m1\">\r\n          <h2>Users:</h2>\r\n          <hr />\r\n          <Table aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>City</StyledTableCell>\r\n                <StyledTableCell>Email</StyledTableCell>\r\n                <StyledTableCell>FirstName</StyledTableCell>\r\n                <StyledTableCell>Initials</StyledTableCell>\r\n                <StyledTableCell>LastName</StyledTableCell>\r\n                <StyledTableCell>Actions</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {users &&\r\n                users.map((user) => {\r\n                  return (\r\n                    <StyledTableRow key={Math.random()}>\r\n                      <StyledTableCell>{user.city}</StyledTableCell>\r\n                      <StyledTableCell>{user.email}</StyledTableCell>\r\n                      <StyledTableCell>{user.firstName}</StyledTableCell>\r\n                      <StyledTableCell>{user.initials}</StyledTableCell>\r\n                      <StyledTableCell>{user.lastName}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Link\r\n                          className=\"btn waves-effect waves-light\"\r\n                          to={\"edit/\" + user.id}\r\n                          title=\"More Info\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n                        <button\r\n                          className=\"btn waves-effect waves-light\"\r\n                          type=\"submit\"\r\n                          name=\"action\"\r\n                        >\r\n                          Delete\r\n                          <i className=\"large material-icons\">delete_forever</i>\r\n                        </button>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"col s12 m3 offset-m1\">\r\n          <h2>Orders:</h2>\r\n          <hr />\r\n          <Table aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>Client name</StyledTableCell>\r\n                <StyledTableCell>Date ordered</StyledTableCell>\r\n                <StyledTableCell>List of cultures selected</StyledTableCell>\r\n                <StyledTableCell>Order Status</StyledTableCell>\r\n                <StyledTableCell>Actions</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders &&\r\n                orders.map((order) => {\r\n                  return (\r\n                    <StyledTableRow key={Math.random()}>\r\n                      <StyledTableCell>{order.authorFirstName}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {order.createdAt.toDate().toDateString()}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>{order.order}</StyledTableCell>\r\n                      <StyledTableCell>{order.status.value}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Link\r\n                          className=\"btn waves-effect waves-light\"\r\n                          to={\"editOrder/\" + order.id}\r\n                          title=\"More Info\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n                        <button\r\n                          className=\"btn waves-effect waves-light\"\r\n                          type=\"submit\"\r\n                          name=\"action\"\r\n                        >\r\n                          Delete\r\n                          <i className=\"large material-icons\">delete_forever</i>\r\n                        </button>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uid: state.firebase.auth.uid,\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications,\r\n    users: state.firestore.ordered.users,\r\n    auth: state.firebase.auth,\r\n    orders: state.firestore.ordered.orders,\r\n    profile: state.firebase.profile,\r\n    // orders: state.firestore.ordered.orders.filter(\r\n    //   (orders) => userid === props.auth.uid\r\n    // ),\r\n  };\r\n};\r\n\r\n// export default compose(\r\n//   connect(mapStateToProps),\r\n\r\n//   firestoreConnect((props) => [\r\n//     { collection: \"orders\", where: [[\"userId\", \"==\", props.uid]] },\r\n//     { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] },\r\n//     { collection: \"users\" },\r\n//   ])\r\n\r\n//IF ADMIN SEEL ALL ORDERS, ELSE SEE ONLY YOURS\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect((props) => {\r\n    if (props.profile.role === \"Admin\")\r\n      return [\r\n        {\r\n          collection: \"orders\",\r\n        },\r\n        {\r\n          collection: \"users\",\r\n        },\r\n        {\r\n          collection: \"notifications\",\r\n          limit: 5,\r\n          orderBy: [\"time\", \"desc\"],\r\n        },\r\n      ];\r\n    return [\r\n      {\r\n        collection: \"orders\",\r\n        where: [\"userId\", \"==\", props.uid],\r\n      },\r\n      {\r\n        collection: \"users\",\r\n      },\r\n      {\r\n        collection: \"notifications\",\r\n        limit: 5,\r\n        orderBy: [\"time\", \"desc\"],\r\n      },\r\n    ];\r\n  })\r\n)(AdminPanel);\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { storage } from \"../../firebase/index\";\r\n\r\nclass EditUser extends Component {\r\n  date = new Date().getDate();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      key: \"\",\r\n      city: \"\",\r\n      email: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      telephone: \"\",\r\n      imageurl: \"\",\r\n      imageName: \"\",\r\n      errors: [],\r\n    };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      city,\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      telephone,\r\n      imageurl,\r\n    } = this.state;\r\n    const errors = this.validate(firstName, lastName, email, city, telephone);\r\n\r\n    if (errors.length > 0) {\r\n      this.setState({ errors });\r\n      return;\r\n    }\r\n    const updateRef = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(this.props.match.params.id);\r\n    console.log(updateRef);\r\n    updateRef\r\n      .update({\r\n        city,\r\n        email,\r\n        firstName,\r\n        lastName,\r\n        telephone,\r\n        imageurl,\r\n      })\r\n      .then((docRef) => {\r\n        this.setState({\r\n          key: \"\",\r\n          city: \"\",\r\n          email: \"\",\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          telephone: \"\",\r\n          imageurl: \"\",\r\n        });\r\n        this.props.history.push(`/AdminPanel`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      if (e.target.files.type < 1) {\r\n        console.log(\"asdasd\");\r\n      } else {\r\n        console.log(\"YYYYYYYYYYYY\");\r\n      }\r\n      this.setState(() => ({ image, imageName: image.name }));\r\n    }\r\n  };\r\n  errorClass = () => {\r\n    return this.state.errors.length === 0 ? \"\" : \"c-error c-validation\";\r\n  };\r\n\r\n  validate = (firstName, lastName, email, city, telephone, image) => {\r\n    const errors = [];\r\n    if (firstName.length === 0) {\r\n      errors.push(\"First Name can't be empty\");\r\n    }\r\n    if (city.length === 0) {\r\n      errors.push(\"City can't be empty\");\r\n    }\r\n    if (telephone.length === 0) {\r\n      errors.push(\"Telephone number can't be empty\");\r\n    }\r\n\r\n    if (telephone.length < 10) {\r\n      errors.push(\"Telephone number should be at least 10 charcters long\");\r\n    }\r\n\r\n    if (lastName.length === 0) {\r\n      errors.push(\"Last Name can't be empty\");\r\n    }\r\n\r\n    if (email.length < 5) {\r\n      errors.push(\"Email should be at least 5 charcters long\");\r\n    }\r\n    if (email.split(\"\").filter((x) => x === \"@\").length !== 1) {\r\n      errors.push(\"Email should contain a @\");\r\n    }\r\n    if (email.indexOf(\".\") === -1) {\r\n      errors.push(\"Email should contain at least one dot\");\r\n    }\r\n    // if (image == null) {\r\n    //   errors.push(\"Please upload a file\");\r\n    // }\r\n\r\n    return errors;\r\n  };\r\n  handleUpload = () => {\r\n    const { image } = this.state;\r\n    if (image == null) {\r\n      console.log(\"There is no image for upload\");\r\n    } else {\r\n      console.log(\"Upload\");\r\n      const filename = this.state.firstName + \"_\" + image.name;\r\n\r\n      const uploadTask = storage.ref(`UploadedFiles/${filename}`).put(image);\r\n\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          this.setState({ progress });\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          // complete function ...\r\n          storage\r\n            .ref(\"UploadedFiles\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then((imageurl) => {\r\n              this.setState({\r\n                key: \"\",\r\n                imageurl: imageurl,\r\n              });\r\n              console.log(imageurl);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ref = firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(this.props.match.params.id);\r\n\r\n    ref.get().then((doc) => {\r\n      if (doc.exists) {\r\n        const users = doc.data();\r\n        this.setState({\r\n          key: doc.id,\r\n          city: users.city,\r\n          email: users.email,\r\n          firstName: users.firstName,\r\n          lastName: users.lastName,\r\n          telephone: users.telephone,\r\n          initials: users.initials,\r\n          imageurl: users.imageurl,\r\n        });\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value;\r\n    this.setState({ users: state });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"panel panel-default\">\r\n          <div className=\"panel-heading\">\r\n            <h1 className=\"header center orange-text\">Edit User</h1>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <h4>\r\n              <Link to={`/AdminPanel`} className=\"btn btn-default search\">\r\n                Back to admin panel\r\n              </Link>\r\n            </h4>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">City:</label> <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"city\"\r\n                  value={this.state.city}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Email:</label> <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">First name:</label> <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"firstName\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Last name:</label> <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"lastName\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Telephone:</label> <br />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"telephone\"\r\n                  value={this.state.telephone}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n                <span style={{ color: \"red\" }}>\r\n                  {this.state.errors[\"telephone\"]}\r\n                </span>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Initials:</label> <br />\r\n                <p>{this.state.initials}</p>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">ImageUrl:</label> <br />\r\n                <p>{this.state.imageurl}</p>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"center\">\r\n            <br />\r\n            <h2 className=\"green-text\">Soilview File Uploader</h2>\r\n            <br />\r\n            <br />\r\n            <div className=\"file-field input-field\">\r\n              <div className=\"btn\">\r\n                <span>File</span>\r\n                <input type=\"file\" onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"file-path-wrapper\">\r\n                <input\r\n                  className=\"file-path validate\"\r\n                  onChange={() => {}}\r\n                  type=\"text\"\r\n                  value={this.state.imageName}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={this.handleUpload}\r\n              className=\"waves-effect waves-light btn\"\r\n            >\r\n              {\" \"}\r\n              Upload{\" \"}\r\n            </button>\r\n            <br />\r\n            <br />\r\n            <img\r\n              src={this.state.imageurl || \"https://via.placeholder.com/400x300\"}\r\n              alt=\"Uploaded Images\"\r\n              height=\"300\"\r\n              width=\"400\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={`${this.errorClass()} error`}>\r\n          {errors.map((error) => (\r\n            <p key={error}>Error: {error}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nconst options = [\r\n  { value: \"Submitted\", label: \"Submitted\" },\r\n  { value: \"In progress\", label: \"In progress\" },\r\n  { value: \"Completed\", label: \"Completed\" },\r\n];\r\nclass EditOrder extends Component {\r\n  date = new Date().getDate();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      key: \"\",\r\n      order: \"\",\r\n      status: \"\",\r\n      selectedOption: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (status) => {\r\n    this.setState({ status }, () =>\r\n      console.log(`Option selected:`, this.state.status.value)\r\n    );\r\n    // alert('you selected' , this.state);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { order, status } = this.state;\r\n\r\n    const updateRef = firebase\r\n      .firestore()\r\n      .collection(\"orders\")\r\n      .doc(this.props.match.params.id);\r\n    console.log(updateRef);\r\n    updateRef\r\n      .update({\r\n        order,\r\n        status,\r\n      })\r\n      .then((docRef) => {\r\n        this.setState({\r\n          key: \"\",\r\n          order,\r\n          status: this.state.status.value,\r\n        });\r\n        this.props.history.push(`/MyOrders`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ref = firebase\r\n      .firestore()\r\n      .collection(\"orders\")\r\n      .doc(this.props.match.params.id);\r\n\r\n    ref.get().then((doc) => {\r\n      if (doc.exists) {\r\n        const orders = doc.data();\r\n        console.log(\"ORDER\", orders.order);\r\n        this.setState({\r\n          key: doc.id,\r\n          order: orders.order,\r\n          status: orders.status,\r\n        });\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value;\r\n    this.setState({ users: state });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"aaaaaaaaaaa\", this.state.order);\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h1 class=\"header center orange-text\">Edit Order</h1>\r\n          </div>\r\n          <div className=\"overlay\"></div>\r\n          <div class=\"panel-body\">\r\n            <h4>\r\n              <Link to={`/MyOrders`} className=\"btn btn-default search\">\r\n                Back to MyOrder\r\n              </Link>\r\n            </h4>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"title\">Order:</label> <br />\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"order\"\r\n                  value={this.state.order}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"title\">Status:</label> <br />\r\n                <Select\r\n                  value={this.state.status}\r\n                  onChange={this.handleChange}\r\n                  options={options}\r\n                />\r\n                <br />\r\n                <br />\r\n              </div>\r\n\r\n              <button type=\"submit\" class=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditOrder;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"../layout/SignedInLinks\";\r\nimport SignedOutLinks from \"../layout/SignedOutLinks\";\r\n\r\nconst DrawerHead = (profile, auth) => {\r\n    const links = auth.uid ? (\r\n        <SignedOutLinks />\r\n        ) : (\r\n            <SignedInLinks profile={profile} />\r\n      );\r\n    return ( \r\n        // <p>Profile Details | Logout</p>\r\n        <div>\r\n        {links}\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth,\r\n      profile: state.firebase.profile,\r\n    };\r\n  };\r\n  export default connect(mapStateToProps)(DrawerHead);\r\n  ","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Navbar from \"../layout/Navbar\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DrawerHead from \"./DrawerHead\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#0097a7\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  iconColor: {\r\n    color: \"#0097a7\",\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Navbar />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          {/* Profile link and login */}\r\n          <DrawerHead></DrawerHead>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link to=\"/MyOrders\" onClick={handleDrawerClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <EcoIcon className={classes.iconColor} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"My Orders\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Divider />\r\n          <Link to=\"/Dashboard\" onClick={handleDrawerClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AddBox className={classes.iconColor} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"New Order\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/ContactForm\" onClick={handleDrawerClose}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <MailIcon className={classes.iconColor} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Contact Us\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <a\r\n            href=\"http://soilviews.com\"\r\n            target=\"blank\"\r\n            onClick={handleDrawerClose}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InfoIcon className={classes.iconColor} />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"About SoilViews\" />\r\n            </ListItem>\r\n          </a>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n// import OrdersTable from \"./OrdersTable\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport class MyOrders extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { orders } = this.props;\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n      head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    }))(TableCell);\r\n\r\n    const StyledTableRow = withStyles((theme) => ({\r\n      root: {\r\n        \"&:nth-of-type(odd)\": {\r\n          backgroundColor: theme.palette.background.default,\r\n        },\r\n      },\r\n    }))(TableRow);\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h1 className=\"header center orange-text\">My Orders</h1>\r\n          <hr />\r\n        </div>\r\n        <div className=\"col s12 m3 offset-m1\">\r\n          <Table aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>Client name</StyledTableCell>\r\n                <StyledTableCell>Date ordered</StyledTableCell>\r\n                <StyledTableCell>List of cultures selected</StyledTableCell>\r\n                <StyledTableCell>Order Status</StyledTableCell>\r\n                <StyledTableCell>Actions</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders &&\r\n                orders.map((order) => {\r\n                  return (\r\n                    <StyledTableRow key={Math.random()}>\r\n                      <StyledTableCell>{order.authorFirstName}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        {order.createdAt.toDate().toDateString()}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell>{order.order}</StyledTableCell>\r\n                      <StyledTableCell>{order.status.value}</StyledTableCell>\r\n                      <StyledTableCell>\r\n                        <Link\r\n                          className=\"btn waves-effect waves-light\"\r\n                          to={\"editOrder/\" + order.id}\r\n                          title=\"More Info\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                        <br />\r\n                        <hr />\r\n                        <br />\r\n                        <button\r\n                          className=\"btn waves-effect waves-light\"\r\n                          type=\"submit\"\r\n                          name=\"action\"\r\n                        >\r\n                          Delete\r\n                          <i className=\"large material-icons\">delete_forever</i>\r\n                        </button>\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uid: state.firebase.auth.uid,\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications,\r\n    users: state.firestore.ordered.users,\r\n    auth: state.firebase.auth,\r\n    orders: state.firestore.ordered.orders,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect((props) => {\r\n    if (props.profile.role === \"Admin\")\r\n      return [\r\n        {\r\n          collection: \"orders\",\r\n        },\r\n      ];\r\n    return [\r\n      {\r\n        collection: \"orders\",\r\n        where: [\"userId\", \"==\", props.uid],\r\n      },\r\n    ];\r\n  })\r\n)(MyOrders);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Nabvar from \"../src/components/layout/Navbar\";\r\nimport Dashboard from \"../src/components/dashboard/Dashboard\";\r\nimport indexPage from \"../src/components/index/indexPage\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport ResetPassword from \"./components/auth/ResetPassword\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport CreateProject from \"./components/projects/CreateProject\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Profile from \"../src/components/Profile/profile\";\r\nimport ContactForm from \"../src/components/ContactForm/ContactForm\";\r\nimport Documentation from \"./components/Help/HelpPage\";\r\nimport AdminPanel from \"./components/Admin/AdminPanel\";\r\nimport EditUser from \"./components/Admin/EditUser\";\r\nimport EditOrder from \"./components/MyOrders/EditOrder\";\r\nimport PersistentDrawerLeft from \"./components/DrawerLeft/PersistentDrawerLeft\";\r\nimport MyOrders from \"./components/MyOrders/MyOrders\";\r\n\r\nfunction App() {\r\n  const [checked] = useState(true);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={checked ? \"isActive\" : \"isInactive\"}>\r\n        <div className=\"App\">\r\n          <header>\r\n            {/* Sidenav */}\r\n            <div className=\"hide-on-large-only\" style={{ paddingTop: \"50px\" }}>\r\n              <PersistentDrawerLeft />\r\n            </div>\r\n            {/* Sidenav */}\r\n            <div className=\"hide-on-med-and-down\">\r\n              <Nabvar />\r\n            </div>\r\n            <Switch>\r\n              <Route path=\"/indexPage\" component={indexPage} />\r\n              <Route path=\"/edit/:id\" component={EditUser} />\r\n              <Route path=\"/editOrder/:id\" component={EditOrder} />\r\n              <Route path=\"/SignIn\" component={SignIn} />\r\n              <Route path=\"/SignUp\" component={SignUp} />\r\n              <Route path=\"/CreateProject\" component={CreateProject} />\r\n              <Route path=\"/Dashboard\" component={Dashboard} />\r\n              <Route path=\"/Profile\" component={Profile} />\r\n              <Route path=\"/ResetPassword\" component={ResetPassword} />\r\n              <Route path=\"/ContactForm\" component={ContactForm} />\r\n              <Route path=\"/HelpPage\" component={Documentation} />\r\n              <Route path=\"/AdminPanel\" component={AdminPanel} />\r\n              <Route path=\"/MyOrders\" component={MyOrders} />\r\n              <Route path=\"/\" component={indexPage} />\r\n            </Switch>\r\n          </header>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log(\"login error\");\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log(\"login success\")\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log(\"signout success\")\n            return {\n                ...state,\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log(\"signup success\")\n            return {\n                ...state,\n                authError:null\n            }\n            case 'SIGNUP_ERROR':\n                console.log(\"signup Error\")\n                return {\n                    ...state,\n                    authError:action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"created project-error\", action.err);\n      return state;\n    case \"DELETE_PROJECT\":\n      console.log(\"delete-error\");\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","const initState = {};\r\n\r\nconst orderReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"save_orders\":\r\n      console.log(\"created order\", action.selectedBoxes);\r\n      return state;\r\n    case \"save_orders_ERROR\":\r\n      console.log(\"created project-error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport orderReducer from \"./orderReducer\";\n\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  order: orderReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default reducers;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose  } from 'redux'\r\nimport reducers from './store/reducers'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from  'react-redux-firebase'\r\nimport firebase from './firebase'\r\nimport ReduxPromise from 'redux-promise';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\r\nconst store = createStoreWithMiddleware(\r\n\treducers,\r\n\tcompose(\r\n\t\tapplyMiddleware(\r\n\t\t\tthunk.withExtraArgument({\r\n\t\t\t\tgetFirebase,\r\n\t\t\t\tgetFirestore\r\n\t\t\t})\r\n\t\t),\r\n\t\treduxFirestore(firebase),\r\n\t\treactReduxFirebase(firebase,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady: true})\r\n\t)\r\n);\r\n  \r\nstore.firebaseAuthIsReady.then(()=>{\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n})\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.721ab35c.png\";"],"sourceRoot":""}