{"version":3,"sources":["store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Dashboard.js","components/index/indexPage.js","components/auth/SignIn.js","components/auth/InputEmail.js","components/auth/ResetPassword.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","components/layout/Footer.js","components/Profile/profile.js","components/ContactForm/ContactForm.js","components/Help/HelpPage.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/index.js","firebase/index.js","index.js"],"names":["sendMessage","message","dispatch","getState","getFirebase","firestore","getFirestore","profile","firebase","authorId","auth","uid","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","connect","signOut","props","Fragment","onClick","to","className","initials","SignedOutLinks","state","links","id","polygon","cordinate","Dashboard","lat","lng","zoom","mapRef","createRef","handleClick","map","current","leafletElement","locate","console","log","Polygon","latlng","onCreate","e","layer","getLatLngs","push","position","this","Map","style","height","center","onLocationfound","handleLocationFound","TileLayer","attribution","url","FeatureGroup","onEdited","_onEditPath","onCreated","onDeleted","_onDeleted","onMounted","_mounted","onEditStart","_onEditStart","onEditStop","_onEditStop","onDeleteStart","_onDeleteStart","onDeleteStop","_onDeleteStop","draw","rectangle","color","positions","GeoJSON","data","london_postcodes","geoJSONStyle","onEachFeature","React","Component","compose","indexPage","class","SignIn","onChangeInput","setState","target","value","onSubmitForm","preventDefault","signIn","email","password","authError","onSubmit","placeholder","onChange","name","creds","credentials","signInWithEmailAndPassword","InputEmail","handleChange","ResetPassword","errors","errorClass","length","validate","split","filter","x","indexOf","handleSubmit","sendPasswordResetEmail","window","alert","bind","error","key","emailAddress","SignUp","city","telephone","signUp","dipsatch","newUser","createUserWithEmailAndPassword","resp","doc","user","set","createrProject","project","CreateProject","title","content","history","multiple","ownProps","projects","ordered","href","ContactForm","HelpPage","App","useState","checked","path","component","Profile","Documentation","Boolean","location","hostname","match","initState","authReducer","action","projectReducer","reducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","database","store","applyMiddleware","ReduxPromise","createStore","createStoreWithMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b83325b4.chunk.js","sourcesContent":["export const signIn = (credentials) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password)\r\n        .then(()=>{\r\n            dispatch({type: \"LOGIN_SUCCESS\"})\r\n        })\r\n        .catch((err)=>{\r\n           dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut()\r\n        .then(()=>{\r\n            dispatch({type: \"SIGNOUT_SUCCESS\"})\r\n        })\r\n    }\r\n}\r\n\r\nexport const sendPasswordResetEmail = (emailAddress) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      \r\n      firebase.auth().sendPasswordResetEmail(\r\n        emailAddress\r\n      ).then(() => {\r\n        dispatch({ type: 'PASSWORD_RESET_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'PASSWORD_RESET_ERROR', err});\r\n      });\r\n    }\r\n  }\r\n\r\n  export const sendMessage = (message) =>{\r\n    return(dispatch, getState, { getFirebase, getFirestore }) =>{\r\n        // TODO: Set types and bindActionCreators\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('messages').add({\r\n          ...message,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorId: authorId,\r\n          createdAt: new Date()\r\n        }).then(() =>{\r\n          dispatch({type:'send_message', message})\r\n        }).catch((err)=>{\r\n          dispatch({type:'send_message_ERROR', err})\r\n        })\r\n      }\r\n}\r\n    \r\n\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch,getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then( (resp)=> {\r\n             return firestore.collection('users').doc(resp.user.uid).set({\r\n                 firstName: newUser.firstName,\r\n                 lastName: newUser.lastName,\r\n                 initials: newUser.firstName[0] + newUser.lastName[0],\r\n                 email:newUser.email,\r\n                 telephone:newUser.telephone,\r\n                 city:newUser.city\r\n             })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux' \r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/* <li><NavLink to='/createproject'>New Project</NavLink></li> */}\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/Profile' className='btn btn-floating grey pulse'>{props.profile.initials}</NavLink></li>\r\n            <i className=\"large material-icons\">account_circle</i>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: ()=> dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n \r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n            <li><NavLink to='/signin'>LogIn</NavLink></li>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\r\n    return (\r\n        <React.Fragment>\r\n            <nav>\r\n                <div className='nav-wrapper'>\r\n                    <div className='container'>\r\n                        <Link to='/' className='brand-logo'>SoilViews</Link>\r\n                        <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n                            {links}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React,{createRef}from \"react\";\r\nimport { Map, TileLayer, FeatureGroup,Polygon,GeoJSON  } from \"react-leaflet\";\r\nimport { compose } from \"redux\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport london_postcodes from '../Files/london_postcodes.json'\r\nimport '../../leaflet.filelayer'\r\n// import firebase from '../../firebase';\r\n// import {  getFirestore } from 'redux-firestore'\r\n// import sophia_postcodes from '../Files/rpu_sofia.geojson'\r\n// import L from \"leaflet\";\r\n\r\n//Hardcoded cordinates of polygons\r\nconst polygon = [\r\n  [42.696295, 23.303643],\r\n  [42.699295, 23.303643],\r\n  [42.699295, 23.313643],\r\n  [42.679295, 23.313643],\r\n]\r\n\r\nvar cordinate= [];\r\nexport class Dashboard extends React.Component {\r\n  \r\n    //Set location when the map is visualized\r\n    state = {\r\n      lat: 42.696295,\r\n      lng: 23.303643,\r\n      zoom: 10\r\n    }\r\n    \r\n  mapRef = createRef()\r\n\r\n  handleClick = () => {\r\n    const map = this.mapRef.current\r\n    if (map != null) {\r\n      map.leafletElement.locate()\r\n      \r\n    }\r\n    console.log(\"CatchMouseClick\",Polygon.latlng);\r\n  }\r\n\r\n\r\n\r\n\r\n  onCreate = (e) => {\r\n    // const firestore = getFirestore();\r\n    var layer = e.layer;\r\n    console.log(\"Polygon Cordinates\",layer.getLatLngs())\r\n    console.log('Log_Create_Shape: ', e)\r\n    cordinate.push(layer.getLatLngs());\r\n\r\n    // firebase.database().firestore.collection('cord').add(\"asdasd\")\r\n\r\n\r\n  //   firebase.database().push(\r\n  //     cordinate,\r\n  //     err => console.log(err ? 'error while pushing' : 'successful push')\r\n  // )\r\n    console.log(\"Array\",cordinate)\r\n    }\r\n\r\n  \r\n\r\n  render() {\r\n    const position = [this.state.lat, this.state.lng];\r\n\r\n    return (   \r\n      <div id=\"map\" className=\"dashboard container\">\r\n        <Map style={{ height: \"50vh\" }} center={position} zoom={13}\r\n          onClick={this.handleClick}\r\n          onCreate={this.onCreate}\r\n          onLocationfound={this.handleLocationFound}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <FeatureGroup>\r\n            <EditControl\r\n              position=\"topleft\"\r\n              onEdited={this._onEditPath}\r\n              onCreated={this.onCreate}\r\n              onDeleted={this._onDeleted}\r\n              onMounted={this._mounted}\r\n              onEditStart={this._onEditStart}\r\n              onEditStop={this._onEditStop}\r\n              onDeleteStart={this._onDeleteStart}\r\n              onDeleteStop={this._onDeleteStop}\r\n              draw={{\r\n                rectangle: false\r\n              }}\r\n            />\r\n          </FeatureGroup>\r\n          <Polygon color=\"purple\" positions={polygon} />\r\n          <GeoJSON\r\n          data={london_postcodes}\r\n          style={this.geoJSONStyle}\r\n          onEachFeature={this.onEachFeature}\r\n        />\r\n        </Map>\r\n        <button className=\"waves-effect waves-light btn-large\" >Button</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose()(Dashboard);\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { Link } from 'react-router-dom';\r\nexport class indexPage extends React.Component {\r\n  render() {\r\n    return (\r\n        <div class=\"section no-pad-bot\" id=\"index-banner\">\r\n        <div class=\"container\">\r\n         \r\n          <h1 class=\"header center orange-text\">Welcome to SoilViews Web App</h1>\r\n          <div class=\"row center\">\r\n            <p class=\"header col s12 light\">Get your soil analysis today</p>\r\n            <p class=\"header col s12 light\">Increase your predictability and crop yields</p> \r\n            <p class=\"header col s12 light\">Not magic: we combine soil samples and Copernicus satelite imaging</p>\r\n          </div>\r\n          {/* <div class=\"row center\">\r\n            <a href=\"https://soilviews.com/\" id=\"download-button\" class=\"btn-large waves-effect waves-light orange\">Get Started</a>\r\n          </div> */}\r\n\r\n          <div class=\"container\">\r\n            <div class=\"section\">\r\n              <div class=\"row center\">\r\n                <div class=\"col s12 m4\">\r\n                    <Link to='/Profile'><h5 class=\"center btn waves-effect waves-light\">My Profile</h5></Link>\r\n                    {/* <i class=\"material-icons\">account_circle</i> */}\r\n                </div>\r\n                <div class=\"col s12 m4\">\r\n                    <Link to='/CreateProject'><h5 class=\"center btn waves-effect waves-light\">New Project</h5></Link>\r\n                    {/* <i class=\"material-icons\">add_circle_outline</i> */}\r\n                </div>\r\n                <div class=\"col s12 m4\">\r\n                    <Link to='/HelpPage'><h5 class=\"center btn waves-effect waves-light\">Documentation</h5></Link>\r\n                    {/* <i class=\"material-icons\">help_outline</i> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default compose()(indexPage);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux' \r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom' \r\nimport { NavLink } from \"react-router-dom\";    \r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            email:'',\r\n            password:''\r\n        }\r\n \r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to=\"/Dashboard\"/>\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"title\">\r\n                <h3 className=\"center-align grey-text\">Welcome!</h3>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 l4 offset-l4\">\r\n                    <div className=\"card grey lighten-3\">\r\n                        <div className=\"card-content\">\r\n                            <h4 className=\"card-title center-align\">Login</h4>\r\n                            <form onSubmit={this.onSubmitForm}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix\">email</i>\r\n                                        <input type=\"email\" placeholder='Email' id=\"email\" className=\"validate\" onChange={this.onChangeInput}/>\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix\">vpn_key</i>\r\n                                        <input type=\"password\" placeholder=\"Password\" id=\"password\" className=\"validate\" onChange={this.onChangeInput}/>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row center-align\">\r\n                                    <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Login <i className=\"material-icons right\">send</i> </button>\r\n                                    <div className=\"red-text center\">\r\n                                             {authError ? <p>{authError}</p>: null }\r\n                                    </div>\r\n                                </div>\r\n                                <li><NavLink to='/ResetPassword'>Forgot password?</NavLink></li>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","  \r\nimport React from 'react'\r\n\r\nconst InputEmail = (props) => {\r\n  return (\r\n    <div className=\"input-field\" >\r\n      \r\n      <input  type=\"email\" placeholder='Email' id=\"email\" onChange={props.handleChange} />\r\n    </div>\r\n  )\r\n}\r\nexport default (InputEmail)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sendPasswordResetEmail } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport InputEmail from './InputEmail'\r\n\r\nclass ResetPassword extends Component {\r\n  state = {\r\n    email: '',\r\n    errors: []\r\n  }\r\n  errorClass = () => {\r\n    return (this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n}\r\n  validate = (email) => {\r\n    const errors = [];\r\n    if (email.length < 5) {\r\n        errors.push(\"Email should be at least 5 charcters long\");\r\n    }\r\n    if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\r\n        errors.push(\"Email should contain a @\");\r\n    }\r\n    if (email.indexOf(\".\") === -1) {\r\n        errors.push(\"Email should contain at least one dot\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    const {email } = this.state;\r\n    const errors = this.validate(email);\r\n    if (errors.length > 0) {\r\n        this.setState({ errors });\r\n        return;\r\n    }\r\n    // e.preventDefault();\r\n   \r\n        this.props.sendPasswordResetEmail(this.state.email);\r\n        window.alert(\"Email has been sent to you,Please check and verify.\");\r\n  \r\n    \r\n               \r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    const { errors } = this.state;\r\n    if (auth.uid) return <Redirect to='/profile' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <span>Please enter your email address below and we will send you information to recover your account</span>\r\n        <form onSubmit={this.handleSubmit} className=\"white\">   \r\n            <h5 className=\"grey-text text-darken-3\">Password Reset</h5>\r\n               \r\n            <InputEmail handleChange={this.handleChange.bind(this)}/>\r\n            <span style={{ color: \"red\" }}>{this.state.errors[\"email\"]}</span>\r\n            <div className=\"input-field\">\r\n            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit <i className=\"material-icons right\">send</i> </button>\r\n                <div className=\"red-text center\">\r\n                  { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n                <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    sendPasswordResetEmail: (emailAddress) => dispatch(sendPasswordResetEmail(emailAddress)),\r\n  }\r\n}\r\nexport default connect (mapStateToProps, mapDispatchToProps)(ResetPassword)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            city:'',\r\n            telephone:'',\r\n            email: '',\r\n            password: '',\r\n            errors: []\r\n        }\r\n\r\n    }\r\n\r\n    errorClass = () => {\r\n        return (this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n    }\r\n\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const { firstName, lastName, email, password,city,telephone } = this.state;\r\n\r\n        const errors = this.validate(firstName, lastName, email, password,city,telephone);\r\n\r\n        if (errors.length > 0) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    validate = (firstName, lastName, email, password,city,telephone) => {\r\n        const errors = [];\r\n        if (firstName.length === 0) {\r\n            errors.push(\"First Name can't be empty\");\r\n        }\r\n        if (city.length === 0) {\r\n            errors.push(\"City can't be empty\");\r\n        }\r\n        if (telephone.length === 0) {\r\n            errors.push(\"Telephone number can't be empty\");\r\n        }\r\n\r\n        if (telephone.length < 10) {\r\n            errors.push(\"Telephone number should be at least 10 charcters long\");\r\n        }\r\n\r\n        if (lastName.length === 0) {\r\n            errors.push(\"Last Name can't be empty\");\r\n        }\r\n\r\n        if (email.length < 5) {\r\n            errors.push(\"Email should be at least 5 charcters long\");\r\n        }\r\n        if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\r\n            errors.push(\"Email should contain a @\");\r\n        }\r\n        if (email.indexOf(\".\") === -1) {\r\n            errors.push(\"Email should contain at least one dot\");\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            errors.push(\"Password should be at least 6 characters long\");\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        if (auth.uid) return <Redirect to=\"/Dashboard\" />\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"title\">\r\n                        <h3 className=\"center-align grey-text\">Register New User</h3>\r\n                    </div>\r\n                    <div className=\"col s12 l4 offset-l4\">\r\n                        <div className=\"card grey lighten-3\">\r\n                            <div className=\"card-content\">\r\n                                <h4 className=\"card-title center-align\">Register</h4>\r\n                                <form onSubmit={this.onSubmitForm} id=\"reg-form\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix\">email</i>\r\n                                            <input type=\"text\" placeholder='First Name' id=\"firstName\" className=\"validate\" onChange={this.onChangeInput} />\r\n                                           \r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"name\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix\">email</i>\r\n                                            <input type=\"text\" placeholder='Last Name' id=\"lastName\" className=\"validate\" onChange={this.onChangeInput} />\r\n                                            \r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"name\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix\">location_city</i>\r\n                                            <input type=\"text\" placeholder='City' id=\"city\" className=\"validate\" onChange={this.onChangeInput} />\r\n                                            \r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"city\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix\">phone</i>\r\n                                            <input type=\"text\" placeholder='telephone' id=\"telephone\" className=\"validate\" onChange={this.onChangeInput} />\r\n                                            \r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"telephone\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix\">email</i>\r\n                                            <input type=\"email\" placeholder='Email' id=\"email\" className=\"validate\" onChange={this.onChangeInput} />\r\n                                            \r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"email\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix\">vpn_key</i>\r\n                                            <input type=\"password\" placeholder=\"Password\" id=\"password\" className=\"validate\" onChange={this.onChangeInput} />\r\n                                         \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row center-align\">\r\n                                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Register <i className=\"material-icons right\">send</i> </button>\r\n                                    </div>\r\n                                    <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <b>\r\n                                        {\r\n                                            authError ? <p>{authError}</p> : null\r\n                                        }\r\n                                        </b>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dipsatch) => {\r\n    return {\r\n        signUp: (newUser) => dipsatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","export const createrProject = (project) =>{\r\n    return(dispatch, getState, { getFirebase, getFirestore }) =>{\r\n        // TODO: Set types and bindActionCreators\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n          ...project,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorId: authorId,\r\n          createdAt: new Date()\r\n        }).then(() =>{\r\n          dispatch({type:'CREATE_PROJECT', project})\r\n        }).catch((err)=>{\r\n          dispatch({type:'CREATE_PROJECT_ERROR', err})\r\n        })\r\n      }\r\n}\r\n\r\nexport const deleteProject = (project) =>{\r\n  return(dispatch, getState, { getFirebase, getFirestore }) =>{\r\n      // TODO: Set types and bindActionCreators\r\n      const firestore = getFirestore();\r\n      firestore.collection('projects').doc(project).delete().then(() =>{\r\n        dispatch({type:'DELETE_PROJECT'})\r\n      }).catch((err)=>{\r\n        dispatch({type:'CREATE_PROJECT_ERROR', err})\r\n      })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createrProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n// import FileUpload from '../../components/FileUpload/index'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            errors: [],\r\n        }\r\n    }\r\n\r\n    errorClass = () => {\r\n        return(this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n     }\r\n\r\n     onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { title, content } = this.state;\r\n\r\n        const errors = this.validate(title, content);\r\n        if (errors.length > 0) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        this.props.createrProject(this.state);\r\n        this.props.history.push('/Dashboard')\r\n    }\r\n\r\n    validate = (title, content) => {\r\n        const errors = [];\r\n        if (title.length === 0) {\r\n            errors.push(\"Title can't be empty\");\r\n        }\r\n\r\n        if (content.length < 5) {\r\n            errors.push(\"Content should be at least 15 charcters long\");\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        const { errors } = this.state;\r\n\r\n        if (!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"title\">\r\n                <h1 class=\"header center orange-text\">New Project</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l10 offset-l1\">\r\n                        <div className=\"card grey lighten-3\">\r\n                            <div className=\"card-content\">\r\n                                <form onSubmit={this.onSubmitForm}>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input type=\"text\" placeholder='Title' id=\"title\" onChange={this.onChangeInput} />\r\n                                            {/* <label htmlFor=\"title\">Title</label> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <textarea id=\"content\" placeholder='Content' className=\"materialize-textarea\" onChange={this.onChangeInput}></textarea>\r\n                                            {/* <label htmlFor=\"content\">Content</label> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    {/* ********** ********** File upload ******************** */}\r\n                                 <div class=\"file-field input-field\">\r\n                                        <div>\r\n                                            <input type=\"file\" multiple></input>\r\n                                        </div>\r\n                                        <div class=\"file-path-wrapper\">\r\n                                            <input className=\"file-path validate\" type=\"text\" placeholder=\"Choose or Drop a file here\"></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Link to='/Dashboard'> <h5>Map your land manually</h5> </Link>\r\n                                    {/* ********** ********** File upload ******************** */}\r\n                                    <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"row center-align\">\r\n                                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create <i className=\"material-icons right\">send</i> </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createrProject: (project) => dispatch(createrProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <footer className=\"page-footer orange\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col l6 s12\">\r\n              <h5 className=\"white-text\">About SoilViews Web App</h5>\r\n              <p className=\"grey-text text-lighten-4\">\r\n                We deliver soil analysis combining Satelite imaging and soil samples.\r\n                <Link to='/AboutUs' className='brand-logo'>(Read more)</Link>\r\n                {/* SoilViews Web App gives you analylisis on what crops could grow best on any specific land. Based on quality hyperspectral saatelite imaging and close work with soil specialists we deliver insights that would help you increase your crop yeilds. */}\r\n              </p>\r\n            </div>\r\n            <div className=\"col l3 s12\">\r\n              <h5 className=\"white-text\">Settings</h5>\r\n              <ul>\r\n                <li>\r\n                  <Link to='/ContactForm' className='brand-logo'>Contact Us</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='/Dashboard' className='brand-logo'>Dashboard</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col l3 s12\">\r\n              <h5 className=\"white-text\">Connect</h5>\r\n              <ul>\r\n                <li>\r\n                  <a className=\"white-text\" href=\"#!\">\r\n                    Link 1\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"white-text\" href=\"#!\">\r\n                    Link 2\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-copyright\">\r\n          <div className=\"container\">\r\n            Created by{\" \"}\r\n            <a\r\n              className=\"orange-text text-lighten-3\"\r\n              href=\"https://soilviews.com/\"\r\n            >\r\n              SoilViews\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import React  from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Profile = (props) => {\r\n   \r\n    return (\r\n        \r\n        <div className=\"card-action\">\r\n             <h1 class=\"header center orange-text\">My Profile</h1>\r\n            <p> <span >Username: </span>{props.profile.firstName} </p>\r\n            <p> <span >Last Name: </span>{props.profile.lastName} </p>\r\n            <p> <span>Email: </span>{props.profile.email} </p>\r\n            <p> <span>City: </span>{props.profile.city} </p>\r\n            <p> <span>Telephone number: </span>{props.profile.telephone} </p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { sendMessage } from '../../store/actions/authActions'\r\nclass ContactForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email:'',\r\n            message:'',\r\n            errors: []\r\n        }\r\n\r\n    }\r\n\r\n    validate = (name, email, message) => {\r\n        const errors = [];\r\n        if (name.length === 0) {\r\n            errors.push(\"First Name can't be empty\");\r\n        }\r\n        if (email.length < 5) {\r\n            errors.push(\"Email should be at least 5 charcters long\");\r\n        }\r\n        if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\r\n            errors.push(\"Email should contain a @\");\r\n        }\r\n        if (email.indexOf(\".\") === -1) {\r\n            errors.push(\"Email should contain at least one dot\");\r\n        }\r\n        if (message.length === 0) {\r\n            errors.push(\"Message can't be empty\");\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    errorClass = () => {\r\n        return (this.state.errors.length === 0 ? '' : 'c-error c-validation');\r\n    }\r\n    onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { name,email,message } = this.state;\r\n\r\n        const errors = this.validate(name,email,message);\r\n        // const { firstName, email,message } = this.state;\r\n\r\n        if (errors.length > 0) {\r\n            this.setState({ errors });\r\n            return;\r\n        }\r\n\r\n        this.props.sendMessage(this.state);\r\n        this.props.history.push('/')\r\n        window.alert(\"We will connect you as soon as possible\");\r\n    }\r\n    onChangeInput = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n  \r\n  render() {\r\n    \r\n    const { errors } = this.state;\r\n   return(\r\n    <React.Fragment>\r\n                <div className=\"title\">\r\n                    <h3 className=\"center-align grey-text\">Contact Form</h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l10 offset-l1\">\r\n                        <div className=\"card grey lighten-3\">\r\n                            <div className=\"card-content\">\r\n                                <form onSubmit={this.onSubmitForm}>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input type=\"text\" placeholder='name' id=\"name\" onChange={this.onChangeInput} />\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <input type=\"text\" placeholder='email' id=\"email\" onChange={this.onChangeInput} />\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <textarea id=\"message\" placeholder='message' onChange={this.onChangeInput}></textarea>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`${this.errorClass()} error`}>\r\n                                        {errors.map(error => (\r\n                                            <p key={error}>Error: {error}</p>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"row center-align\">\r\n                                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">submit <i className=\"material-icons right\">send</i> </button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n   );\r\n  }\r\n  \r\n    \r\n  }\r\n  \r\n  const mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => dispatch(sendMessage(message))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)"," import React from \"react\";\r\nimport { compose } from \"redux\";\r\nexport class HelpPage extends React.Component {\r\n  render() {\r\n    return (\r\n        <div class=\"section no-pad-bot\" id=\"index-banner\">\r\n        <div class=\"container\">\r\n         \r\n          <h1 class=\"header center orange-text\">Help Page</h1>\r\n          <div class=\"row center\">\r\n            <h5 class=\"header col s12 light\">Learn how to submit a project</h5>\r\n            <h5 class=\"header col s12 light\">How to work with mapping regions</h5> \r\n          </div>\r\n              </div>\r\n            </div>\r\n    );\r\n  }\r\n}\r\nexport default compose()(HelpPage);\r\n","import React, {useState} from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport Nabvar from '../src/components/layout/Navbar'\r\nimport Dashboard from '../src/components/dashboard/Dashboard'\r\nimport indexPage from '../src/components/index/indexPage'\r\nimport SignIn from './components/auth/SignIn'\r\nimport ResetPassword from './components/auth/ResetPassword'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nimport Footer from './components/layout/Footer'\r\nimport Profile from '../src/components/Profile/profile'\r\nimport ContactForm from '../src/components/ContactForm/ContactForm'\r\nimport Documentation from \"./components/Help/HelpPage\";\r\n// import FileUpload from \"./components/FileUpload/index\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const [checked] = useState(true);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={checked ? \"isActive\" : \"isInactive\"}>\r\n        <div className='App' >\r\n          <header>\r\n          \r\n            <Nabvar></Nabvar>\r\n            <Switch>\r\n              <Route path='/indexPage' component={indexPage} />\r\n              <Route path='/SignIn' component={SignIn} />\r\n              <Route path='/SignUp' component={SignUp} />\r\n              <Route path='/CreateProject' component={CreateProject} />\r\n              <Route path='/Dashboard' component={Dashboard} />\r\n              <Route path='/Profile' component={Profile} />\r\n              <Route path='/ResetPassword' component={ResetPassword} />\r\n              <Route path='/ContactForm' component={ContactForm}/>\r\n              <Route path='/HelpPage' component={Documentation}/>\r\n              <Route path=\"/\" component={indexPage} />\r\n            </Switch>\r\n          </header>\r\n          <Footer/>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"login error\");\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"login success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"signout success\")\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log(\"signup success\")\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n            case 'SIGNUP_ERROR':\r\n                console.log(\"signup Error\")\r\n                return {\r\n                    ...state,\r\n                    authError:action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n   \r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type){\r\n        case 'CREATE_PROJECT' :\r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n                console.log('created project-error', action.err)\r\n                return state;\r\n       case 'DELETE_PROJECT' :\r\n                console.log('delete-error',)\r\n                 return state;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\n\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default reducers","\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCaIrtat0fd8si1o80cA9W2RIL6bn77YpI',\r\n  authDomain: 'robust-solution-221513.firebaseapp.com',\r\n  databaseURL: 'https://robust-solution-221513.firebaseio.com',\r\n  projectId: 'robust-solution-221513',\r\n  storageBucket: 'gs://robust-solution-221513.appspot.com',\r\n  messagingSenderId: '8658609726',\r\n  appId: '1:8658609726:web:70e9e4e7190b615aa3136f',\r\n  measurementId: 'G-KZCRXQYB7Y'\r\n};\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({});\r\n\r\n\r\n firebase.database();\r\n  \r\n  export default firebase","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose  } from 'redux'\r\nimport reducers from './store/reducers'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from  'react-redux-firebase'\r\nimport firebase from './firebase'\r\nimport ReduxPromise from 'redux-promise';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\r\nconst store = createStoreWithMiddleware(\r\n\treducers,\r\n\tcompose(\r\n\t\tapplyMiddleware(\r\n\t\t\tthunk.withExtraArgument({\r\n\t\t\t\tgetFirebase,\r\n\t\t\t\tgetFirestore\r\n\t\t\t})\r\n\t\t),\r\n\t\treduxFirestore(firebase),\r\n\t\treactReduxFirebase(firebase,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady: true})\r\n\t)\r\n);\r\n  \r\nstore.firebaseAuthIsReady.then(()=>{\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n})\r\n\r\n"],"sourceRoot":""}